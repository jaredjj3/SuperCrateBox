{"version":3,"sources":["webpack/bootstrap bc5b8a416961062499c1","./lib/SuperCrateBox.js","./lib/Resources.js","./lib/Player.js","./lib/Crate.js","./lib/util/CONSTANTS.js","./lib/Sprite.js","./lib/Input.js","./lib/util/ENEMIES.js","./lib/Enemy.js","./lib/util/SPRITES.js","./lib/util/STAGES.js","./lib/Wall.js","./lib/WallSprite.js","./lib/util/CollisionManager.js","./lib/Moveable.js"],"names":["ENEMIES","SPRITES","STAGES","CONSTANTS","SuperCrateBox","play","bind","main","update","render","setup","reset","renderHtml","renderEntity","renderEntities","checkPlayerBounds","allObjects","updateEntities","lastTime","Date","now","gameOver","dt","requestAnimationFrame","player","crate","enemies","handleInput","checkCollisions","collisionManager","handleCollisions","ctx","stage","clearRect","score","scoreEl","className","type","pos","lastPos","vel","sprite","PLAYER_IDLE","STAGE_1_CRATE_SPAWN","CRATE","STAGE_1","load","init","onReady","canvas","document","getElementById","getContext","velocityEl","positionEl","i","length","innerHTML","vx","toFixed","vy","x","hitbox","y","entity","save","translate","restore","list","scb","addEventListener","Resources","resourceCache","loading","readyCallbacks","_load","get","isReady","arg","forEach","url","ready","k","hasOwnProperty","func","push","img","Image","onload","callback","src","Player","opts","jumpNumber","w","h","input","window","PLAYER_VERTICAL_INIT_VEL","PLAYER_HORIZONTAL_VEL","PLAYER_HORIZONTAL_ACC","PLAYER_RUN_RIGHT","PLAYER_RUN_LEFT","isDown","Crate","size","GRAVITY","JUMP_TIME","ENEMY_ONE_VEL","ENEMY_ONE_INIT_VEL","Sprite","speed","frames","dir","once","facing","_index","frame","max","idx","Math","floor","done","scale","drawImage","Input","pressedKeys","setKey","e","key","toUpperCase","indexOf","keyCode","preventDefault","event","status","code","String","fromCharCode","multiplier","random","ENEMY_1","Enemy","direction","handleCollision","collisionType","lastVel","PLAYER_JUMP_RIGHT","PLAYER_JUMP_LEFT","WT","SLW1","MLW1","HO1","OW1","sample","seed","Wall","WallSprite","fillStyle","fillRect","CollisionManager","collisionEl","entityHitWall","typeOfCollision","handleEnemyCollisions","handleCrateCollisions","handlePlayerCollisions","objects","walls","otherObjects","otherObject","resetXPos","resetYPos","resetXVel","nullXVel","resetYVel","nullYVel","console","log","offset","obj1","obj2","collisionExists","rect1","rect2","_collisionRight","_collisionLeft","_collisionTop","_collisionBottom","l","r","t","b","Moveable"],"mappings":"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OD,MAAM1H,CAAN,GAAU0H,MAAMzF,CAAhB,GAAoB0F,MAAM3H,CAA1B,IAA+B0H,MAAM1H,CAAN,GAAU2H,MAAM3H,CAAtD;AACD;;;oCAEc0H,K,EAAOC,K,EAAO;AAC3B;AACA;AACA;AACA;AACA,cAAOD,MAAM1H,CAAN,GAAU2H,MAAM3H,CAAN,GAAU2H,MAAM1F,CAA1B,IAA+ByF,MAAM1H,CAAN,GAAU0H,MAAMzF,CAAhB,GAAoB0F,MAAM3H,CAAN,GAAU2H,MAAM1F,CAA1E;AACD;;;mCAEayF,K,EAAOC,K,EAAO;AAC1B;AACA;AACA;AACA;AACA,cAAOD,MAAMxH,CAAN,GAAUyH,MAAMzH,CAAN,GAAUyH,MAAMzF,CAA1B,IAA+BwF,MAAMxH,CAAN,GAAUwH,MAAMxF,CAAhB,GAAoByF,MAAMzH,CAAN,GAAUyH,MAAMzF,CAA1E;AACD;;;sCAEgBwF,K,EAAOC,K,EAAO;AAC7B;AACA;AACA;AACA;AACA,cAAOD,MAAMxH,CAAN,GAAUwH,MAAMxF,CAAhB,GAAoByF,MAAMzH,CAA1B,IAA+BwH,MAAMxH,CAAN,GAAUyH,MAAMzH,CAAtD;AACD;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;mBAIaiG,gB;;;;;;;;;;;;;;;ACzYf;;KAAY7J,S;;;;;;KAEN8L,Q;AACJ,qBAAYrG,IAAZ,EAAkB;AAAA;;AAAA,SACRtD,GADQ,GAC+BsD,IAD/B,CACRtD,GADQ;AAAA,SACHC,OADG,GAC+BqD,IAD/B,CACHrD,OADG;AAAA,SACMC,GADN,GAC+BoD,IAD/B,CACMpD,GADN;AAAA,SACW0G,OADX,GAC+BtD,IAD/B,CACWsD,OADX;AAAA,SACoBzG,MADpB,GAC+BmD,IAD/B,CACoBnD,MADpB;;AAEhB,UAAKH,GAAL,GAAWA,GAAX;AACA,UAAKC,OAAL,GAAe,CAAC,CAAD,EAAI,CAAJ,CAAf;AACA,UAAKC,GAAL,GAAWA,GAAX;AACA,UAAK0G,OAAL,GAAe,CAAC,CAAD,EAAI,CAAJ,CAAf;AACA,UAAKzG,MAAL,GAAcA,MAAd;;AAEA,UAAKjC,MAAL,GAAc,KAAKA,MAAL,CAAYF,IAAZ,CAAiB,IAAjB,CAAd;AACD;;;;4BAEMgB,E,EAAI;AACT,YAAKiB,OAAL,CAAa,CAAb,IAAkB,KAAKD,GAAL,CAAS,CAAT,CAAlB;AACA,YAAKC,OAAL,CAAa,CAAb,IAAkB,KAAKD,GAAL,CAAS,CAAT,CAAlB;AACA,YAAK4G,OAAL,CAAa,CAAb,IAAkB,KAAK1G,GAAL,CAAS,CAAT,CAAlB;AACA,YAAK0G,OAAL,CAAa,CAAb,IAAkB,KAAK1G,GAAL,CAAS,CAAT,CAAlB;AACA,YAAKA,GAAL,CAAS,CAAT,KAAerC,UAAUuG,OAAV,GAAoBpF,EAAnC;AACA,YAAKgB,GAAL,CAAS,CAAT,KAAe,KAAKE,GAAL,CAAS,CAAT,IAAclB,EAA7B;AACA,YAAKgB,GAAL,CAAS,CAAT,KAAe,KAAKE,GAAL,CAAS,CAAT,IAAclB,EAA7B;AACA,YAAKmB,MAAL,CAAYjC,MAAZ,CAAmBc,EAAnB;AACD;;;;;;mBAIY2K,Q","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap bc5b8a416961062499c1\n **/","import Resources from './Resources';\nimport Player from './Player';\nimport Crate from './Crate';\nimport Sprite from './Sprite';\nimport Input from './Input';\nimport * as ENEMIES from './util/ENEMIES';\nimport * as SPRITES from './util/SPRITES';\nimport * as STAGES from './util/STAGES';\nimport * as CONSTANTS from './util/CONSTANTS';\nimport CollisionManager from './util/CollisionManager';\n\nclass SuperCrateBox {\n  constructor() {\n    this.play = this.play.bind(this);\n    this.main = this.main.bind(this);\n    this.update = this.update.bind(this);\n    this.render = this.render.bind(this);\n    this.setup = this.setup.bind(this);\n    this.reset = this.reset.bind(this);\n    this.renderHtml = this.renderHtml.bind(this);\n    this.renderEntity = this.renderEntity.bind(this);\n    this.renderEntities = this.renderEntities.bind(this);\n    this.checkPlayerBounds = this.checkPlayerBounds.bind(this);\n    this.allObjects = this.allObjects.bind(this);\n    this.updateEntities = this.updateEntities.bind(this);\n  }\n\n  play() {\n    this.lastTime = Date.now();\n    this.setup();\n  }\n\n  main() {\n    if (this.gameOver) {\n      this.reset();\n      return;\n    }\n    const { update, render } = this;\n    const now = Date.now();\n    const dt = (now - this.lastTime) / 1000.0;\n\n    update(dt);\n    render();\n\n    this.lastTime = now;\n    requestAnimationFrame(this.main);\n  }\n\n  update(dt) {\n    const {\n      player,\n      crate,\n      enemies,\n      handleInput,\n      allObjects,\n      updateEntities,\n      checkCollisions,\n      checkPlayerBounds,\n      collisionManager\n    } = this;\n\n    player.handleInput(dt);\n    updateEntities(dt);\n    collisionManager.handleCollisions(allObjects());\n    checkPlayerBounds();\n  }\n\n  render() {\n    const {\n      ctx,\n      player,\n      enemies,\n      crate,\n      stage,\n      renderEntity,\n      renderEntities,\n      renderHtml,\n    } = this;\n\n    renderHtml();\n    ctx.clearRect(0, 0, 900, 600);\n    renderEntity(player);\n    renderEntities(enemies);\n    renderEntity(crate);\n    renderEntities(stage);\n  }\n\n  // private\n\n  reset() {\n    this.gameOver = false;\n    this.score = 0;\n    this.scoreEl.className = 'single_digits';\n\n    this.player = new Player({\n      type: 'player',\n      pos: [450, 300],\n      lastPos: [450, 300],\n      vel: [0, 0],\n      sprite: SPRITES.PLAYER_IDLE\n    });\n\n    this.enemies = [];\n    this.crate = new Crate({\n      pos: STAGES.STAGE_1_CRATE_SPAWN(),\n      vel: [0, 10],\n      sprite: SPRITES.CRATE\n    });\n    this.stage = STAGES.STAGE_1;\n\n    this.main();\n  }\n\n  setup() {\n    this.gameOver = false;\n\n    // loads resources\n    Resources.load([\n      './lib/img/jay.png',\n      './lib/img/crate.png'\n    ]);\n    const init = () => {\n      this.main();\n    };\n    Resources.onReady(init);\n    Input.setup();\n\n    // HTML Elements\n    const canvas = document.getElementById('canvas');\n    this.ctx = canvas.getContext('2d');\n    this.score = 0;\n    this.scoreEl = document.getElementById('score');\n    this.scoreEl.className = 'single_digits';\n    this.velocityEl = document.getElementById('velocity');\n    this.positionEl = document.getElementById('position');\n    this.collisionManager = new CollisionManager();\n\n    this.player = new Player({\n      pos: [450, 300],\n      vel: [0, 0],\n      sprite: SPRITES.PLAYER_IDLE\n    });\n\n    this.enemies = [];\n\n    this.crate = new Crate({\n      pos: STAGES.STAGE_1_CRATE_SPAWN(),\n      vel: [0, 10],\n      sprite: SPRITES.CRATE\n    });\n    this.stage = STAGES.STAGE_1;\n  }\n\n  updateEntities(dt) {\n    this.player.update(dt);\n    this.crate.update(dt);\n    for (let i = 0; i < this.enemies.length; i++) {\n      this.enemies[i].update(dt);\n    }\n  }\n\n  checkPlayerBounds() {\n    if (this.player.pos[1] > 570) {\n      this.gameOver = true;\n    }\n  }\n\n  renderHtml() {\n    this.scoreEl.innerHTML = this.score;\n    const vx = this.player.vel[0].toFixed(0);\n    const vy = this.player.vel[1].toFixed(0);\n    const x = this.player.hitbox().x.toFixed(0);\n    const y = this.player.hitbox().y.toFixed(0);\n    this.velocityEl.innerHTML = `V: ${vx}, ${vy}`;\n    this.positionEl.innerHTML = `P: ${x}, ${y}`;\n  }\n\n  renderEntity(entity) {\n    const { ctx } = this;\n    ctx.save();\n    ctx.translate(entity.pos[0], entity.pos[1]);\n    entity.sprite.render(ctx);\n    ctx.restore();\n  }\n\n  renderEntities(list) {\n    for (let i = 0; i < list.length; i++) {\n      this.renderEntity(list[i]);\n    }\n  }\n\n  allObjects() {\n    const { player, enemies, crate, stage } = this;\n    return { player, enemies, crate, stage };\n  }\n}\n\nconst scb = new SuperCrateBox();\ndocument.addEventListener('DOMContentLoaded', () => scb.play());\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/SuperCrateBox.js\n **/","class Resources {\n  constructor() {\n    this.resourceCache = {};\n    this.loading = [];\n    this.readyCallbacks = [];\n\n    this.load = this.load.bind(this);\n    this._load = this._load.bind(this);\n    this.get = this.get.bind(this);\n    this.isReady = this.isReady.bind(this);\n    this.onReady = this.onReady.bind(this);\n  }\n\n  load(arg) {\n    const { _load } = this;\n    arg.forEach(url => _load(url));\n  }\n\n  get(url) {\n    return this.resourceCache[url];\n  }\n\n  isReady() {\n    const { resourceCache } = this;\n    let ready = true;\n    for (let k in resourceCache) {\n      if (resourceCache.hasOwnProperty(k) && !resourceCache[k]) {\n        ready = false;\n      }\n    }\n    return ready;\n  }\n\n  onReady(func) {\n    this.readyCallbacks.push(func);\n  }\n\n  // private\n\n  _load(url) {\n    const { resourceCache, readyCallbacks, isReady } = this;\n\n    if (resourceCache[url]) {\n      return resourceCache[url];\n    } else {\n      const img = new Image();\n      img.onload = () => {\n        resourceCache[url] = img;\n\n        if (isReady()) {\n          readyCallbacks.forEach(callback => callback());\n        }\n      };\n      resourceCache[url] = false;\n      img.src = url;\n    }\n  }\n\n}\n\nconst { load, get, onReady, isReady } = new Resources();\nexport default {\n  load: load,\n  get: get,\n  onReady: onReady,\n  isReady: isReady\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Resources.js\n **/","import Moveable from './Moveable';\nimport * as CONSTANTS from './util/CONSTANTS';\nimport * as SPRITES from './util/SPRITES';\n\nclass Player extends Moveable {\n  constructor(opts) {\n    super(opts);\n    this.type = 'player';\n    this.jumpNumber = 0;\n\n    this.hitbox = () => ({\n      x: this.pos[0] + 20,\n      y: this.pos[1] + 15,\n      w: 27,\n      h: 49\n    });\n\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleInput(dt) {\n    const input = window.input;\n    const { pos, vel, jumpNumber } = this;\n    const {\n      PLAYER_VERTICAL_INIT_VEL,\n      PLAYER_HORIZONTAL_VEL,\n      PLAYER_HORIZONTAL_ACC\n    } = CONSTANTS;\n    const {\n      PLAYER_RUN_RIGHT,\n      PLAYER_RUN_LEFT,\n      PLAYER_IDLE\n    } = SPRITES;\n\n    if (input.isDown('UP') || input.isDown('SPACE')) {\n      if (true) {\n        this.jumpNumber++;\n        this.vel[1] = PLAYER_VERTICAL_INIT_VEL;\n      }\n    }\n\n    if (input.isDown('LEFT')) {\n      if (vel[0] > -PLAYER_HORIZONTAL_VEL) {\n        this.vel[0] -= (PLAYER_HORIZONTAL_ACC * dt);\n      } else {\n        this.vel[0] = -PLAYER_HORIZONTAL_VEL;\n      }\n    } else if (input.isDown('RIGHT')) {\n      if (this.vel[0] < PLAYER_HORIZONTAL_VEL) {\n        this.vel[0] += (PLAYER_HORIZONTAL_ACC * dt);\n      } else {\n        this.vel[0] = PLAYER_HORIZONTAL_VEL;\n      }\n    } else {\n      this.vel[0] = 0;\n    }\n\n    if (vel[0] > 0) {\n      this.sprite = PLAYER_RUN_RIGHT;\n    } else if (vel[0] < 0) {\n      this.sprite = PLAYER_RUN_LEFT;\n    } else {\n      this.sprite = PLAYER_IDLE;\n    }\n  }\n\n\n}\n\nexport default Player;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Player.js\n **/","import { GRAVITY } from './util/CONSTANTS';\nimport Moveable from './Moveable';\n\nclass Crate extends Moveable {\n  constructor(opts) {\n    super(opts);\n    this.type = 'crate';\n\n    this.hitbox = () => ({\n      x: this.pos[0],\n      y: this.pos[1],\n      w: this.sprite.size[0],\n      h: this.sprite.size[1]\n    });\n  }\n\n}\n\nexport default Crate;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Crate.js\n **/","export const PLAYER_HORIZONTAL_VEL = 375; // px/sec\nexport const PLAYER_HORIZONTAL_ACC = 6000; // px/sec^2\nexport const PLAYER_VERTICAL_INIT_VEL = -500;\nexport const GRAVITY = 1400; // px/sec^2\nexport const JUMP_TIME = 0; //millisec\nexport const ENEMY_ONE_VEL = 300;\nexport const ENEMY_ONE_INIT_VEL = -300;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/util/CONSTANTS.js\n **/","import Resources from './Resources.js';\n\nclass Sprite {\n  constructor(opts) {\n    const { pos, size, speed, frames, url, dir, once, facing } = opts;\n    this.pos = pos;\n    this.size = size;\n    this.speed = typeof speed === 'number' ? speed : 0;\n    this.frames = frames;\n    this.url = url;\n    this.dir = dir;\n    this.once = once;\n    this._index = 0;\n    this.facing = facing;\n\n    this.update = this.update.bind(this);\n    this.render = this.render.bind(this);\n  }\n\n  update(dt) {\n    const { speed } = this;\n    this._index += speed * dt;\n  }\n\n  render(ctx) {\n    const { speed, frames, pos, size, once, _index, dir, url, facing } = this;\n    let frame;\n\n    if (speed > 0) {\n      const max = this.frames.length;\n      // idx is the ith picture\n      const idx = Math.floor(_index);\n      frame = frames[idx % max];\n\n      if (once && idx >= max) {\n        this.done = true;\n        return;\n      }\n    } else {\n      frame = frames[0];\n    }\n\n    let x = pos[0];\n    let y = pos[1];\n\n    if (dir === 'vertical') {\n      y += frame * size[1];\n    } else {\n      x += frame * size[0];\n    }\n\n    if (facing === 'left') {\n      ctx.translate(size[0], 0);\n      ctx.scale(-1, 1);\n    }\n    \n\n    ctx.drawImage(\n      Resources.get(url),\n      x, y,\n      size[0], size[1],\n      0, 0,\n      size[0], size[1]\n    );\n  }\n}\n\nexport default Sprite;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Sprite.js\n **/","class Input {\n  constructor() {\n    this.pressedKeys = {};\n\n    this.setKey = this.setKey.bind(this);\n  }\n\n  setup() {\n    const { setKey } = this;\n    document.addEventListener('keydown', e => setKey(e, true));\n    document.addEventListener('keyup', e => setKey(e, false));\n    // window.addEventListener('blur', () => { this.pressedKeys = {}; });\n    window.input = {\n      isDown: key => this.pressedKeys[key.toUpperCase()],\n    };\n\n    window.addEventListener(\"keydown\", e => {\n    // prevent scrolling with arrow keys\n    if([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n        e.preventDefault();\n    }\n}, false);\n\n  }\n\n  setKey(event, status) {\n    const code = event.keyCode;\n    let key;\n\n    switch(code) {\n      case 32:\n        key = 'SPACE';\n        break;\n      case 37:\n        key = 'LEFT';\n        break;\n      case 38:\n        key = 'UP';\n        break;\n      case 39:\n        key = 'RIGHT';\n        break;\n      case 40:\n        key = 'DOWN';\n        break;\n      default:\n        key = String.fromCharCode(code);\n    }\n\n    this.pressedKeys[key] = status;\n  }\n}\n\nexport default new Input();\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Input.js\n **/","import Enemy from '../Enemy';\nimport * as CONSTANTS from './CONSTANTS';\nimport * as SPRITES from './SPRITES';\n\nconst multiplier = () => {\n  if (Math.random() > 0.5) {\n    return -1;\n  }\n  return 1;\n};\n\nexport const ENEMY_1 = () => ( new Enemy({\n    type: 'enemy',\n    pos: [400, 0],\n    lastPos: [450, 0],\n    vel: [CONSTANTS.ENEMY_ONE_VEL, 0],\n    sprite: SPRITES.PLAYER_IDLE\n  })\n);\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/util/ENEMIES.js\n **/","import Moveable from './Moveable';\nimport * as CONSTANTS from './util/CONSTANTS';\n\nclass Enemy extends Moveable {\n  constructor(opts) {\n    super(opts);\n    this.direction = Math.random() > 0.5 ? 'left' : 'right';\n\n    this.hitbox = () => ({\n      x: this.pos[0] + 20,\n      y: this.pos[1] + 15,\n      w: 27,\n      h: 49\n    });\n\n    this.handleCollision = this.handleCollision.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n  handleCollision(collisionType) {\n    if (collisionType === 'right') {\n      this.direction = 'left';\n    } else if (collisionType === 'left') {\n      this.direction = 'right';\n    }\n  }\n\n  update(dt) {\n    if (this.direction === 'left') {\n      this.vel[0] = -CONSTANTS.ENEMY_ONE_VEL;\n    } else if (this.direction === 'right') {\n      this.vel[0] = CONSTANTS.ENEMY_ONE_VEL;\n    }\n    this.lastPos = this.pos;\n    this.lastVel = this.vel;\n    this.vel[1] += CONSTANTS.GRAVITY * dt;\n    this.pos[0] += this.vel[0] * dt;\n    this.pos[1] += this.vel[1] * dt;\n    this.sprite.update(dt);\n  }\n\n}\n\nexport default Enemy;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Enemy.js\n **/","import Sprite from '../Sprite';\n\nexport const PLAYER_IDLE = new Sprite({\n  url: './lib/img/jay.png',\n  pos: [0, 0],\n  frames: [\n    0, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3,\n    3, 3, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0\n  ],\n  size: [64, 64],\n  speed: 24,\n  dir: 'horizontal',\n  once: false,\n  facing: 'right'\n});\n\n\nexport const PLAYER_RUN_RIGHT = new Sprite({\n  url: './lib/img/jay.png',\n  pos: [0, 0],\n  frames: [5, 6, 7, 8, 9, 8, 7, 6],\n  size: [64, 64],\n  speed: 18,\n  dir: 'horizontal',\n  once: false,\n  facing: 'right'\n});\n\n\nexport const PLAYER_RUN_LEFT = new Sprite({\n  url: './lib/img/jay.png',\n  pos: [0, 0],\n  frames: [6, 7, 8, 9, 8, 7, 6, 5],\n  size: [64, 64],\n  speed: 18,\n  dir: 'horizontal',\n  once: false,\n  facing: 'left'\n});\n\n\nexport const PLAYER_JUMP_RIGHT = new Sprite({\n  url: './lib/img/jay.png',\n  pos: [0, 0],\n  frames: [10, 11, 11, 12, 12, 12, 12, 12, 12, 12],\n  size: [64, 64],\n  speed: 24,\n  dir: 'horizontal',\n  once: true,\n  facing: 'right'\n});\n\nexport const PLAYER_JUMP_LEFT = new Sprite({\n  url: './lib/img/jay.png',\n  pos: [0, 0],\n  frames: [10, 11, 11, 12, 12, 12, 12, 12, 12, 12],\n  size: [64, 64],\n  speed: 24,\n  dir: 'horizontal',\n  once: true,\n  facing: 'left'\n});\n\nexport const CRATE = new Sprite({\n  url: './lib/img/crate.png',\n  pos: [0, 0],\n  frames: [0],\n  size: [20, 20],\n  speed: 1,\n  dir: 'horizontal',\n  once: false,\n  facing: 'right'\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/util/SPRITES.js\n **/","import Wall from '../Wall';\n\n// WALL_THICKNESS\nconst WT = 30;\n\n// constants related to stage 1\nconst SLW1 = 170;   // SIDE_LEDGE_WIDTH_1\nconst MLW1 = 300;   // MID_LEDGE_WIDTH_1\nconst HO1 = 20;     // HEIGHT_OFFSET_1\nconst OW1 = 150;    // OPENING_WIDTH_1\n\nexport const STAGE_1 = [\n  // top walls\n  new Wall({\n    pos: [WT, 0],\n    size: [450 - (OW1 / 2) - WT, WT]\n  }),\n  new Wall({\n    pos: [450 + (OW1 / 2), 0],\n    size: [450 - (OW1 / 2) - WT, WT]\n  }),\n\n  // bottom walls\n  new Wall({\n    pos: [WT, 600 - WT],\n    size: [450 - (OW1 / 2) - WT, WT]\n  }),\n  new Wall({\n    pos: [450 + (OW1 / 2), 600 - WT],\n    size: [450 - (OW1 / 2) - WT, WT]\n  }),\n\n  // left wall\n  new Wall({\n    pos: [0, 0],\n    size: [WT, 600]\n  }),\n\n  // right wall\n  new Wall({\n    pos: [900 - WT, 0],\n    size: [WT, 600]\n  }),\n\n  // left ledge\n  new Wall({\n    pos: [WT, 300 - HO1],\n    size: [SLW1, WT]\n  }),\n\n  // right ledge\n  new Wall({\n    pos: [900 - WT - SLW1, 300 - HO1],\n    size: [SLW1, WT]\n  }),\n\n  // bottom-middle ledge\n  new Wall({\n    pos: [SLW1 + WT + 100, 400 - HO1],\n    size: [MLW1, WT]\n  }),\n\n  // upper-middle ledge\n  new Wall({\n    pos: [SLW1 + WT + 100, 170 - HO1],\n    size: [MLW1, WT]\n  }),\n\n  new Wall({\n    pos: [0, -WT - 25],\n    size: [900, WT]\n  })\n];\n\nexport const STAGE_1_CRATE_SPAWN = () => {\n  const sample = max => Math.floor(Math.random() * max);\n  const seed = [\n    [110, 230],\n    [120, 230],\n    [100, 230],\n    [90, 230],\n    [440, 330],\n    [450, 330],\n    [430, 330],\n    [420, 330],\n    [180, 520],\n    [190, 520],\n    [170, 520],\n    [160, 520],\n    [690, 520],\n    [780, 230],\n    [790, 230],\n    [770, 230],\n    [760, 230],\n    [440, 100],\n    [450, 100],\n    [430, 100],\n    [420, 100]\n  ][sample(21)];\n  let multiplier = 1;\n  if (Math.random() > 0.5) {\n    multiplier = -1;\n  }\n  return [ (seed[0] + (multiplier * sample(10))), seed[1] ];\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/util/STAGES.js\n **/","import WallSprite from './WallSprite';\n\nclass Wall {\n  constructor(opts) {\n    const { pos, size } = opts;\n    this.type = 'wall';\n    this.size = size;\n    this.pos = pos;\n    this.sprite = new WallSprite(size);\n\n    this.hitbox = () => ({\n      x: this.pos[0],\n      y: this.pos[1],\n      w: size[0],\n      h: size[1]\n    });\n  }\n}\n\nexport default Wall;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Wall.js\n **/","import Resources from './Resources';\n\nclass WallSprite {\n  constructor(size) {\n    this.size = size;\n  }\n\n  render(ctx) {\n    const { size } = this;\n    // const pattern = ctx.createPattern(\n    //   Resources.get('./lib/img/brick.png'),\n    //   'repeat'\n    // );\n    // ctx.fillStyle = pattern;\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0, 0, size[0], size[1]);\n    // ctx.strokeStyle = 'red';\n    // ctx.strokeRect(0, 0, size[0], size[1]);\n  }\n}\n\nexport default WallSprite;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/WallSprite.js\n **/","import Crate from '../Crate';\n\nclass CollisionManager {\n  constructor() {\n    this.collisionEl = document.getElementById('collision');\n    this.entityHitWall = this.entityHitWall.bind(this);\n    this.typeOfCollision = this.typeOfCollision.bind(this);\n    this.handleCollisions = this.handleCollisions.bind(this);\n    this.handleEnemyCollisions = this.handleEnemyCollisions.bind(this);\n    this.handleCrateCollisions = this.handleCrateCollisions.bind(this);\n    this.handlePlayerCollisions = this.handlePlayerCollisions.bind(this);\n  }\n\n  handleCollisions(objects) {\n    const { player, enemies, crate } = objects;\n    const walls = objects.stage;\n    const {\n      handlePlayerCollisions,\n      handleEnemyCollisions,\n      handleCrateCollisions\n    } = this;\n\n    handlePlayerCollisions(player, [...walls, ...enemies, crate]);\n    handleEnemyCollisions(enemies, walls);\n    handleCrateCollisions(crate, walls);\n  }\n\n  handlePlayerCollisions(player, otherObjects) {\n    const { typeOfCollision, entityHitWall } = this;\n    for (let i = 0; i < otherObjects.length; i++) {\n      const otherObject = otherObjects[i];\n      const collisionType = typeOfCollision(player, otherObject);\n      if (otherObject.type === 'wall') {\n        entityHitWall(player, collisionType);\n      }\n    }\n  }\n\n  handleEnemyCollisions(enemies, walls) {\n\n  }\n\n  handleCrateCollisions(crate, walls) {\n\n  }\n\n  entityHitWall(entity, collisionType) {\n    const {\n      resetXPos,\n      resetYPos,\n      resetXVel,\n      nullXVel,\n      resetYVel,\n      nullYVel,\n    } = this;\n    console.log(collisionType);\n    this.collisionEl.innerHTML = collisionType;\n    switch(collisionType) {\n      case 'bottom':\n        resetYPos(entity);\n        nullYVel(entity);\n        break;\n      case 'top':\n        resetYPos(entity);\n        nullYVel(entity);\n        break;\n      case 'left':\n        resetXPos(entity);\n      case 'right':\n        resetXPos(entity);\n        break;\n      case 'left-top':\n        resetXPos(entity, 3);\n        resetXVel(entity);\n        resetYPos(entity);\n        break;\n      case 'right-top':\n        resetXPos(entity, -3);\n        resetXVel(entity);\n        resetYPos(entity);\n        break;\n\n      case 'left-bottom':\n        resetXPos(entity, 5);\n        resetYPos(entity);\n        resetYVel(entity);\n        break;\n\n      case 'right-bottom':\n        resetXPos(entity, -5);\n        resetYPos(entity);\n        resetYVel(entity);\n        break;\n\n      case 'top-bottom':\n        resetXPos(entity);\n        break;\n      default:\n        break;\n    }\n  }\n\n  resetXPos(entity, offset = 0) {\n    entity.pos[0] = entity.lastPos[0] + offset;\n  }\n\n  resetYPos(entity, offset = 0) {\n    entity.pos[1] = entity.lastPos[1] + offset;\n  }\n\n  resetXVel(entity, offset = 0) {\n    entity.vel[0] = entity.lastVel[0] + offset;\n  }\n\n  nullXVel(entity) {\n    entity.vel[0] = 0;\n  }\n\n  resetYVel(entity, offset = 0) {\n    entity.vel[1] = entity.lastVel[1] + offset;\n  }\n\n  nullYVel(entity) {\n    entity.vel[1] = 0;\n  }\n\n  typeOfCollision(obj1, obj2) {\n    const { collisionExists } = this;\n    const rect1 = obj1.hitbox();\n    const rect2 = obj2.hitbox();\n\n    if (collisionExists(rect1, rect2)) {\n      const {\n        _collisionRight,\n        _collisionLeft,\n        _collisionTop,\n        _collisionBottom\n      } = this;\n\n      const l = _collisionLeft(rect1, rect2);\n      const r = _collisionRight(rect1, rect2);\n      const t = _collisionTop(rect1, rect2);\n      const b = _collisionBottom(rect1, rect2);\n\n      if ( t && b ) {\n        return 'top-bottom';\n      } else if (l && t) {\n        return 'left-top';\n      } else if (l && b ) {\n        return 'left-bottom';\n      } else if (r && t) {\n        return 'right-top';\n      } else if (r && b) {\n        return 'right-bottom';\n      } else if (l) {\n        return 'left';\n      } else if (r) {\n        return 'right';\n      } else if (t) {\n        return 'top';\n      } else if (b) {\n        return 'bottom';\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n\n  }\n\n  collisionExists(rect1, rect2) {\n    return (\n      rect1.x < rect2.x + rect2.w &&\n      rect1.x + rect1.w > rect2.x &&\n      rect1.y < rect2.y + rect2.h &&\n      rect1.h + rect1.y > rect2.y\n    );\n  }\n\n  // private\n\n  _collisionRight(rect1, rect2) {\n    // const leftSideOf1 = rect1.x;\n    // const rightSideOf1 = rect1.x + rect1.width;\n    // const leftSideOf2 = rect2.x;\n    // const rightSideOf2 = rect2.x + rect2.width;\n    return rect1.x + rect1.w > rect2.x && rect1.x < rect2.x;\n  }\n\n  _collisionLeft(rect1, rect2) {\n    // const leftSideOf1 = rect1.x;\n    // const rightSideOf1 = rect1.x + rect1.width;\n    // const leftSideOf2 = rect2.x;\n    // const rightSideOf2 = rect2.x + rect2.width;\n    return rect1.x < rect2.x + rect2.w && rect1.x + rect1.w > rect2.x + rect2.w;\n  }\n\n  _collisionTop(rect1, rect2) {\n    // const topSideOf1 = rect1.y;\n    // const bottomSideOf1 = rect1.y + rect1.height;\n    // const topSideOf2 = rect2.y;\n    // const bottomSideOf2 = rect2.y + rect2.height;\n    return rect1.y < rect2.y + rect2.h && rect1.y + rect1.h > rect2.y + rect2.h;\n  }\n\n  _collisionBottom(rect1, rect2) {\n    // const topSideOf1 = rect1.y;\n    // const bottomSideOf1 = rect1.y + rect1.height;\n    // const topSideOf2 = rect2.y;\n    // const bottomSideOf2 = rect2.y + rect2.height;\n    return rect1.y + rect1.h > rect2.y && rect1.y < rect2.y;\n  }\n\n  //   const rect1 = this._getRect(entity);\n  //   for (let i = 0; i < collisionMap.length; i++) {\n  //     const otherEntity = collisionMap[i];\n  //     const rect2 = this._getRect(otherEntity);\n  //\n  //     const collisionType = this._collisionDetected(rect1, rect2);\n  //     if (collisionType) {\n  //       if (entity.type === 'enemy') {\n  //         entity.handleCollision(collisionType);\n  //       }\n  //\n  //       if (otherEntity.type === 'wall') {\n  //         this._entityHitWall(entity, collisionType);\n  //       }\n  //\n  //       if (entity.type === 'player' && otherEntity.type === 'crate') {\n  //         this.score++;\n  //         if (this.score > 9) {\n  //           this.scoreEl.className = 'double_digits';\n  //         }\n  //         this.crate = new Crate({\n  //           pos: [-100, -100],\n  //           vel: [0, 0],\n  //           sprite: SPRITES.CRATE\n  //         });\n  //         setTimeout(() => {\n  //             this.crate = new Crate({\n  //             pos: STAGES.STAGE_1_CRATE_SPAWN(),\n  //             vel: [0, 10],\n  //             sprite: SPRITES.CRATE\n  //           });\n  //         }, 500);\n  //       }\n  //\n  //     }\n  //   }\n  //   return null;\n  // }\n  //\n  //\n  // getRect(entity) {\n  //   const hitbox = entity.hitbox(this.ctx);\n  //\n  //   return {\n  //     x: hitbox[0], y: hitbox[1], width: hitbox[2], height: hitbox[3]\n  //   };\n  // }\n  //\n  // collisionDetected(rect1, rect2) {\n  //   const {\n  //     _collisionRight,\n  //     _collisionLeft,\n  //     _collisionTop,\n  //     _collisionBottom\n  //   } = this;\n  //\n  //   if (rect1.x < rect2.x + rect2.width &&\n  //       rect1.x + rect1.width > rect2.x &&\n  //       rect1.y < rect2.y + rect2.height &&\n  //       rect1.height + rect1.y > rect2.y) {\n  //         const l = _collisionLeft(rect1, rect2);\n  //         const r = _collisionRight(rect1, rect2);\n  //         const t = _collisionTop(rect1, rect2);\n  //         const b = _collisionBottom(rect1, rect2);\n  //\n  //         if ( t && b ) {\n  //           return 'top-bottom';\n  //         } else if (l && t) {\n  //           return 'left-top';\n  //         } else if (l && b ) {\n  //           return 'left-bottom';\n  //         } else if (r && t) {\n  //           return 'right-top';\n  //         } else if (r && b) {\n  //           return 'right-bottom';\n  //         } else if (l) {\n  //           return 'left';\n  //         } else if (r) {\n  //           return 'right';\n  //         } else if (t) {\n  //           return 'top';\n  //         } else if (b) {\n  //           return 'bottom';\n  //         }\n  //\n  //   }\n  // }\n  //\n\n  //\n  // _entityHitWall(entity, collisionType) {\n  //   if (entity.type === 'player') {\n  //     this.collisionEl.innerHTML = `C: ${collisionType}`;\n  //   }\n  //   switch(collisionType) {\n  //     case 'right':\n  //       entity.vel[0] = 0;\n  //       entity.pos[0] = entity.lastPos[0];\n  //       break;\n  //     case 'left':\n  //       entity.vel[0] = 0;\n  //       entity.pos[0] = entity.lastPos[0];\n  //       break;\n  //     case 'top':\n  //       entity.vel[1] = -entity.vel[1] * 0.25;\n  //       entity.pos[1] = entity.lastPos[1];\n  //       break;\n  //     case 'bottom':\n  //       entity.vel[1] = 0;\n  //       entity.pos[1] = entity.lastPos[1];\n  //       break;\n  //     case 'right-bottom':\n  //       if (entity.pos[0] > entity.lastPos[0]) {\n  //         entity.pos[0] = entity.lastPos[0];\n  //       }\n  //       if (entity.vel[0] === 0 && entity.vel[1] > 0) {\n  //         entity.pos[0] = entity.lastPos[0];\n  //       }\n  //       if (entity.pos[1] > entity.lastPos[1] &&\n  //          entity.vel[0] === 0) {\n  //         entity.pos[1] = entity.lastPos[1];\n  //         entity.vel[1] = 0;\n  //       }\n  //       if (entity.pos[1] > entity.lastPos[1] &&\n  //          entity.vel[1] > 0) {\n  //         entity.pos[1] = entity.lastPos[1] + 3;\n  //         entity.vel[1] = -entity.vel[1] * 0.25;\n  //       }\n  //       break;\n  //     case 'left-bottom':\n  //       if (entity.pos[0] < entity.lastPos[0]) {\n  //         entity.pos[0] = entity.lastPos[0];\n  //       }\n  //       if (entity.vel[0] === 0 && entity.vel[1] > 0) {\n  //         entity.pos[0] = entity.lastPos[0];\n  //       }\n  //       if (entity.pos[1] > entity.lastPos[1] &&\n  //          entity.vel[0] === 0) {\n  //         entity.pos[1] = entity.lastPos[1];\n  //         entity.vel[1] = 0;\n  //       }\n  //       if (entity.pos[1] > entity.lastPos[1] &&\n  //          entity.vel[1] < 0) {\n  //         entity.pos[1] = entity.lastPos[1] + 3;\n  //         entity.vel[1] = -entity.vel[1] * 0.25;\n  //       }\n  //       break;\n  //     case 'right-top':\n  //       if (entity.vel[0] > 0) {\n  //         entity.vel[0] = 0;\n  //       }\n  //       if (entity.pos[0] > entity.lastPos[0]) {\n  //         entity.pos[0] = entity.lastPos[0];\n  //       }\n  //       if (entity.vel[1] < 0) {\n  //         entity.pos[1] = entity.lastPos[1];\n  //         entity.vel[1] = -entity.vel[1] * 0.25;\n  //       }\n  //       break;\n  //     case 'left-top':\n  //       if (entity.vel[0] < 0) {\n  //         entity.vel[0] = 0;\n  //       }\n  //       if (entity.pos[0] < entity.lastPos[0]) {\n  //         entity.pos[0] = entity.lastPos[0];\n  //       }\n  //       if (entity.vel[1] < 0) {\n  //         entity.pos[1] = entity.lastPos[1];\n  //         entity.vel[1] = -entity.vel[1] * 0.25;\n  //       }\n  //       break;\n  //     case 'top-bottom':\n  //       entity.pos[0] = entity.lastPos[0];\n  //       break;\n  //   }\n  // }\n\n}\n\nexport default CollisionManager;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/util/CollisionManager.js\n **/","import * as CONSTANTS from './util/CONSTANTS';\n\nclass Moveable {\n  constructor(opts) {\n    const { pos, lastPos, vel, lastVel, sprite } = opts;\n    this.pos = pos;\n    this.lastPos = [0, 0];\n    this.vel = vel;\n    this.lastVel = [0, 0];\n    this.sprite = sprite;\n\n    this.update = this.update.bind(this);\n  }\n\n  update(dt) {\n    this.lastPos[0] = this.pos[0];\n    this.lastPos[1] = this.pos[1];\n    this.lastVel[0] = this.vel[0];\n    this.lastVel[1] = this.vel[1];\n    this.vel[1] += CONSTANTS.GRAVITY * dt;\n    this.pos[0] += this.vel[0] * dt;\n    this.pos[1] += this.vel[1] * dt;\n    this.sprite.update(dt);\n  }\n\n}\n\nexport default Moveable;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Moveable.js\n **/"],"sourceRoot":""}
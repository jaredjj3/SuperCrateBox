{"version":3,"sources":["webpack/bootstrap 0836f8544805a159816b","./lib/SuperCrateBox.js","./lib/Resources.js","./lib/Player.js","./lib/Moveable.js","./lib/util/CONSTANTS.js","./lib/util/SPRITES.js","./lib/Sprite.js","./lib/util/UNITS.js","./lib/util/STAGES.js","./lib/Wall.js","./lib/WallSprite.js","./lib/Powerup.js","./lib/Crate.js","./lib/Enemy.js","./lib/Shield.js","./lib/Input.js","./lib/util/CollisionManager.js"],"names":["UNITS","SPRITES","STAGES","CONSTANTS","SuperCrateBox","play","bind","main","setup","reset","update","render","addEnemy","addShield","resetCrate","renderHtml","allObjects","addPowerup","removeEnemy","removeShield","renderEntity","renderEntities","updateEntities","killAllEnemies","checkPlayerBounds","removeElectricShield","lastTime","Date","now","lastEnemySpawnTime","lastPowerupSpawnTime","input","window","ENEMY_SPAWN_RATE","ENEMY_SPAWN_DIFF","ENEMY_SPAWN_FLOOR","gameOver","isDown","isResetting","player","kill","volumeClicked","muteHeldDown","audioIsPlaying","volumeEl","innerHTML","audio","pause","dt","timeSinceLastEnemySpawn","timeSinceLastPowerupSpawn","nextSpawnTime","score","POWERUP_SPAWN_RATE","mainLoop","requestAnimationFrame","crate","enemies","handleInput","checkCollisions","collisionManager","handleCollisions","ctx","stage","shields","powerups","electricShields","clearRect","pos","setTimeout","scoreEl","className","load","init","Audio","addEventListener","currentTime","onReady","canvas","document","getElementById","getContext","currentObjectId","STAGE_1","i","length","enemy","isDead","id","vx","vel","toFixed","vy","x","hitbox","y","entity","save","translate","sprite","restore","list","push","seed","Math","random","powerup","SHIELD_PICKUP","ELECTRIC_SHIELD_PICKUP","NUKE_PICKUP","SHIELD","ELECTRIC_SHIELD","targetId","shield","splice","electricShield","scb","Resources","resourceCache","loading","readyCallbacks","_load","get","isReady","arg","forEach","url","ready","k","hasOwnProperty","func","img","Image","onload","callback","src","Player","opts","type","jumpNumber","jumpKeyPressed","lastJumpTime","lastRunDirection","shieldHitPoints","electricShieldHitPoints","lastHit","w","h","setSprite","handleSurfaceCollison","handleEnemyCollision","handleJumpKeyPress","handleJumpKeyRelease","sprites","idleRight","facing","idleLeft","runRight","runLeft","isFloating","powerupType","game","addElectricShield","numEnemies","numberToRemove","floor","SHIELD_RECOVERY_TIME","ELECTRIC_SHIELD_RECOVERY_TIME","timeSinceLastHit","isNotRecovering","outerElectricShield","flashing","outerShield","collisionType","PLAYER_VERTICAL_INIT_VEL","PLAYER_HORIZONTAL_VEL","PLAYER_HORIZONTAL_ACC","Moveable","lastPos","lastVel","GRAVITY","ENEMY_ONE_VEL","ENEMY_ONE_INIT_VEL","frames","size","speed","dir","once","ELECTRIC_SHIELD_FLASHING","SHIELD_FLASHING","PLAYER_IDLE_RIGHT","PLAYER_IDLE_LEFT","PLAYER_RUN_RIGHT","PLAYER_RUN_LEFT","PLAYER_FLOAT_RIGHT","PLAYER_FLOAT_LEFT","PLAYER_JUMP_RIGHT","PLAYER_JUMP_LEFT","CRATE","HAMMER_RUN_RIGHT","HAMMER_RUN_LEFT","Sprite","_index","frame","max","idx","done","scale","drawImage","CRATE_SPAWN","normal","POWERUP_SPAWN","PLAYER","HAMMER","WT","SLW1","MLW1","HO1","OW1","sample","seeds","multiplier","Wall","WallSprite","pattern","createPattern","fillStyle","fillRect","Powerup","Crate","Enemy","randomSpeed","direction","handleCollision","Shield","Input","pressedKeys","setKey","e","key","toUpperCase","indexOf","keyCode","preventDefault","event","status","code","String","fromCharCode","CollisionManager","entityHitWall","typeOfCollision","handleEnemyCollisions","handleCrateCollisions","handlePlayerCollisions","objects","walls","otherObjects","isPlayerFloating","playerPickedUpCrate","otherObject","handlePowerupCollision","removePowerup","nuke","j","wall","resetXPos","resetYPos","resetXVel","nullXVel","resetYVel","nullYVel","offset","obj1","obj2","collisionExists","rect1","rect2","_collisionRight","_collisionLeft","_collisionTop","_collisionBottom","l","r","t","b"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 0836f8544805a159816b\n **/"," import Resources from './Resources';\nimport Player from './Player';\nimport Crate from './Crate';\nimport Sprite from './Sprite';\nimport Input from './Input';\nimport Enemy from './Enemy';\nimport * as UNITS from './util/UNITS';\nimport { CRATE, PLAYER, HAMMER } from './util/UNITS';\nimport * as SPRITES from './util/SPRITES';\nimport * as STAGES from './util/STAGES';\nimport * as CONSTANTS from './util/CONSTANTS';\nimport CollisionManager from './util/CollisionManager';\n\nclass SuperCrateBox {\n  constructor() {\n    this.play = this.play.bind(this);\n    this.main = this.main.bind(this);\n    this.setup = this.setup.bind(this);\n    this.reset = this.reset.bind(this);\n    this.update = this.update.bind(this);\n    this.render = this.render.bind(this);\n    this.addEnemy = this.addEnemy.bind(this);\n    this.addShield = this.addShield.bind(this);\n    this.resetCrate = this.resetCrate.bind(this);\n    this.renderHtml = this.renderHtml.bind(this);\n    this.allObjects = this.allObjects.bind(this);\n    this.addPowerup = this.addPowerup.bind(this);\n    this.removeEnemy = this.removeEnemy.bind(this);\n    this.removeShield = this.removeShield.bind(this);\n    this.renderEntity = this.renderEntity.bind(this);\n    this.renderEntities = this.renderEntities.bind(this);\n    this.updateEntities = this.updateEntities.bind(this);\n    this.killAllEnemies = this.killAllEnemies.bind(this);\n    this.checkPlayerBounds = this.checkPlayerBounds.bind(this);\n    this.removeElectricShield = this.removeElectricShield.bind(this);\n  }\n\n  play() {\n    this.lastTime = Date.now();\n    this.lastEnemySpawnTime = Date.now();\n    this.lastPowerupSpawnTime = Date.now();\n    this.setup();\n  }\n\n  main() {\n    const input = window.input;\n    const { ENEMY_SPAWN_RATE, ENEMY_SPAWN_DIFF, ENEMY_SPAWN_FLOOR } = CONSTANTS;\n\n    if ((this.gameOver || input.isDown('R')) && !this.isResetting) {\n      this.player.kill();\n      this.reset();\n      return;\n    }\n\n    if (input.isDown('M') || this.volumeClicked) {\n      if (!this.muteHeldDown) {\n        this.audioIsPlaying = !this.audioIsPlaying;\n        if (this.audioIsPlaying) {\n          this.volumeEl.innerHTML = 'volume_up';\n          this.audio.play();\n          this.volumeClicked = false;\n        } else {\n          this.volumeEl.innerHTML = 'volume_off';\n          this.audio.pause();\n          this.volumeClicked = false;\n        }\n      }\n      this.muteHeldDown = true;\n    } else {\n      this.muteHeldDown = false;\n    }\n\n    const { reset, update, render } = this;\n    const now = Date.now();\n    const dt = (now - this.lastTime) / 1000.0;\n    const timeSinceLastEnemySpawn = now - this.lastEnemySpawnTime;\n    const timeSinceLastPowerupSpawn = now - this.lastPowerupSpawnTime;\n    let nextSpawnTime = ENEMY_SPAWN_RATE - (this.score * ENEMY_SPAWN_DIFF);\n    nextSpawnTime = nextSpawnTime <= ENEMY_SPAWN_FLOOR ?\n      ENEMY_SPAWN_FLOOR : nextSpawnTime;\n\n    if (timeSinceLastEnemySpawn >= nextSpawnTime) {\n      this.addEnemy();\n    }\n\n    if (timeSinceLastPowerupSpawn >= CONSTANTS.POWERUP_SPAWN_RATE) {\n      this.addPowerup();\n    }\n\n    update(dt);\n    render();\n\n    this.lastTime = now;\n    window.mainLoop = requestAnimationFrame(this.main);\n  }\n\n  update(dt) {\n    const {\n      player,\n      crate,\n      enemies,\n      handleInput,\n      allObjects,\n      updateEntities,\n      checkCollisions,\n      checkPlayerBounds,\n      collisionManager\n    } = this;\n\n    player.handleInput(dt);\n    updateEntities(dt);\n    collisionManager.handleCollisions(allObjects());\n    checkPlayerBounds();\n  }\n\n  render() {\n    const {\n      ctx,\n      player,\n      enemies,\n      crate,\n      stage,\n      shields,\n      powerups,\n      electricShields,\n      renderEntity,\n      renderEntities,\n      renderHtml,\n    } = this;\n\n    renderHtml();\n    ctx.clearRect(0, 0, 900, 600);\n    renderEntities(stage);\n    renderEntities(enemies);\n    renderEntity(player);\n    renderEntity(crate);\n    renderEntities(powerups);\n    renderEntities(shields);\n    renderEntities(electricShields);\n  }\n\n  // private\n\n  resetCrate() {\n    this.crate.pos[0] = -100;\n    this.crate.pos[1] = 100;\n    setTimeout(() => {\n      this.crate = CRATE();\n    }, 500);\n  }\n\n  reset() {\n    this.isResetting = true;\n    this.shields = [];\n    this.electricShields = [];\n    this.lastEnemySpawnTime = Date.now();\n    this.lastPowerupSpawnTime = Date.now();\n\n    setTimeout(() => {\n      this.score = 0;\n      this.scoreEl.className = 'single_digits';\n      this.killAllEnemies();\n      this.player = PLAYER();\n      this.resetCrate();\n      this.powerups = [];\n      this.lastEnemySpawnTime = Date.now();\n      this.lastPowerupSpawnTime = Date.now();\n      this.isResetting = false;\n      this.gameOver = false;\n    }, 2000);\n\n    this.main();\n  }\n\n  setup() {\n    this.gameOver = false;\n    this.isResetting = false;\n    this.muteHeldDown = false;\n    this.audioIsPlaying = false;\n    // loads resources\n    Resources.load([\n      './lib/img/jay.png',\n      './lib/img/crate.png',\n      './lib/img/hammer.png',\n      './lib/img/metal.png',\n      './lib/img/shieldPickup.png',\n      './lib/img/electricShieldPickup.png',\n      './lib/img/nukePickup.png',\n      './lib/img/electricShield.png',\n      './lib/img/shield.png'\n    ]);\n    const init = () => {\n      this.audio = new Audio('./lib/img/bonetrousle.mp3');\n      const audio = this.audio;\n      this.audio.addEventListener('ended', () => {\n        audio.currentTime = 0;\n        audio.play();\n      }, false);\n      this.main();\n    };\n    Resources.onReady(init);\n    Input.setup();\n\n    // HTML Elements\n    const canvas = document.getElementById('canvas');\n    this.ctx = canvas.getContext('2d');\n    this.score = 0;\n    this.volumeEl = document.getElementById('volume');\n    this.volumeEl.addEventListener('click', () => {\n      this.volumeClicked = true;\n    });\n    this.scoreEl = document.getElementById('score');\n    this.scoreEl.className = 'single_digits';\n    // this.velocityEl = document.getElementById('velocity');\n    // this.positionEl = document.getElementById('position');\n    this.collisionManager = new CollisionManager(this);\n\n    this.player = PLAYER();\n    this.currentObjectId = 0;\n    this.enemies = [];\n    this.shields = [];\n    this.electricShields = [];\n    this.crate = CRATE();\n    this.powerups = [];\n    this.stage = STAGES.STAGE_1;\n  }\n\n  updateEntities(dt) {\n    this.player.update(dt);\n    for (let i = 0; i < this.enemies.length; i++) {\n      const enemy = this.enemies[i];\n      enemy.update(dt, this);\n      if (enemy.isDead && (enemy.pos[1] > 600 || enemy.pos[1] < -10)) {\n        enemy.update(dt, this);\n        this.removeEnemy(enemy.id);\n      }\n    }\n\n    for (let i = 0; i < this.powerups.length; i++) {\n      this.powerups[i].update(dt);\n    }\n\n    for (let i = 0; i < this.electricShields.length; i++) {\n      this.electricShields[i].update(dt);\n    }\n\n    for (let i = 0; i < this.shields.length; i++) {\n      this.shields[i].update(dt);\n    }\n    this.crate.update(dt);\n  }\n\n  checkPlayerBounds() {\n    if (this.player.pos[1] > 700 && this.gameOver === false) {\n      this.gameOver = true;\n      this.player.kill();\n    }\n  }\n\n  renderHtml() {\n    const { score, player } = this;\n    this.scoreEl.innerHTML = score;\n    if (this.score > 19) {\n      this.scoreEl.className = \"high_digits\";\n    } else if (this.score > 9) {\n      this.scoreEl.className = \"double_digits\";\n    }\n    const vx = this.player.vel[0].toFixed(0);\n    const vy = this.player.vel[1].toFixed(0);\n    const x = this.player.hitbox().x.toFixed(0);\n    const y = this.player.hitbox().y.toFixed(0);\n    // this.velocityEl.innerHTML = `V: ${vx}, ${vy}`;\n    // this.positionEl.innerHTML = `P: ${x}, ${y}`;\n  }\n\n  renderEntity(entity) {\n    const { ctx } = this;\n    ctx.save();\n    ctx.translate(entity.pos[0], entity.pos[1]);\n    entity.sprite.render(ctx);\n    ctx.restore();\n  }\n\n  renderEntities(list) {\n    for (let i = 0; i < list.length; i++) {\n      this.renderEntity(list[i]);\n    }\n  }\n\n  allObjects() {\n    const { player, enemies, crate, stage, powerups, shields } = this;\n    return { player, enemies, crate, stage, powerups, shields };\n  }\n\n  addEnemy() {\n    this.lastEnemySpawnTime = Date.now();\n    this.currentObjectId++;\n    this.enemies.push(HAMMER(this.currentObjectId));\n  }\n\n  addPowerup() {\n    this.lastPowerupSpawnTime = Date.now();\n    this.currentObjectId++;\n    const seed = Math.random();\n    let powerup;\n    if (seed <= 0.4) {\n      powerup = UNITS.SHIELD_PICKUP(this.currentObjectId);\n    } else if (seed > 0.4 && seed < 0.8) {\n      powerup = UNITS.ELECTRIC_SHIELD_PICKUP(this.currentObjectId);\n    } else {\n      powerup = UNITS.NUKE_PICKUP(this.currentObjectId);\n    }\n    this.powerups.push(powerup);\n  }\n\n  addShield() {\n    this.currentObjectId++;\n    this.shields.push(UNITS.SHIELD(this.currentObjectId, this.player));\n  }\n\n  addElectricShield() {\n    this.currentObjectId++;\n    this.electricShields.push(\n      UNITS.ELECTRIC_SHIELD(this.currentObjectId, this.player)\n    );\n  }\n\n  removeShield(targetId) {\n    for (let i = 0; i < this.shields.length; i++) {\n      const shield = this.shields[i];\n      if (shield.id === targetId) {\n        this.shields.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  removeElectricShield(targetId) {\n    for (let i = 0; i < this.electricShields.length; i++) {\n      const electricShield = this.electricShields[i];\n      if (electricShield.id === targetId) {\n        this.electricShields.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  removeEnemy(targetId) {\n    for (let i = 0; i < this.enemies.length; i++) {\n      const enemy = this.enemies[i];\n      if (enemy.id === targetId) {\n        this.enemies.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  killAllEnemies() {\n    for (let i = 0; i < this.enemies.length; i++) {\n      this.enemies[i].kill();\n    }\n  }\n\n  removePowerup(targetId) {\n    for (let i = 0; i < this.powerups.length; i++) {\n      const powerup = this.powerups[i];\n      if (powerup.id === targetId) {\n        this.powerups.splice(i, 1);\n        return;\n      }\n    }\n  }\n}\n\nconst scb = new SuperCrateBox();\ndocument.addEventListener('DOMContentLoaded', () => scb.play());\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/SuperCrateBox.js\n **/","class Resources {\n  constructor() {\n    this.resourceCache = {};\n    this.loading = [];\n    this.readyCallbacks = [];\n\n    this.load = this.load.bind(this);\n    this._load = this._load.bind(this);\n    this.get = this.get.bind(this);\n    this.isReady = this.isReady.bind(this);\n    this.onReady = this.onReady.bind(this);\n  }\n\n  load(arg) {\n    const { _load } = this;\n    arg.forEach(url => _load(url));\n  }\n\n  get(url) {\n    return this.resourceCache[url];\n  }\n\n  isReady() {\n    const { resourceCache } = this;\n    let ready = true;\n    for (let k in resourceCache) {\n      if (resourceCache.hasOwnProperty(k) && !resourceCache[k]) {\n        ready = false;\n      }\n    }\n    return ready;\n  }\n\n  onReady(func) {\n    this.readyCallbacks.push(func);\n  }\n\n  // private\n\n  _load(url) {\n    const { resourceCache, readyCallbacks, isReady } = this;\n\n    if (resourceCache[url]) {\n      return resourceCache[url];\n    } else {\n      const img = new Image();\n      img.onload = () => {\n        resourceCache[url] = img;\n\n        if (isReady()) {\n          readyCallbacks.forEach(callback => callback());\n        }\n      };\n      resourceCache[url] = false;\n      img.src = url;\n    }\n  }\n\n}\n\nconst { load, get, onReady, isReady } = new Resources();\nexport default {\n  load: load,\n  get: get,\n  onReady: onReady,\n  isReady: isReady\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Resources.js\n **/","import Moveable from './Moveable';\nimport * as CONSTANTS from './util/CONSTANTS';\nimport * as SPRITES from './util/SPRITES';\nimport * as UNITS from './util/UNITS';\n\nclass Player extends Moveable {\n  constructor(opts) {\n    super(opts);\n    this.type = 'player';\n    this.jumpNumber = 0;\n    this.jumpKeyPressed = false;\n    this.lastJumpTime = Date.now();\n    this.lastRunDirection = 'right';\n    this.shieldHitPoints = 0;\n    this.electricShieldHitPoints = 0;\n    this.lastHit = Date.now();\n    this.isDead = false;\n\n    this.hitbox = () => ({\n      x: this.pos[0] + 20,\n      y: this.pos[1] + 15,\n      w: 27,\n      h: 49\n    });\n\n    this.setSprite = this.setSprite.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSurfaceCollison = this.handleSurfaceCollison.bind(this);\n    this.handleEnemyCollision = this.handleEnemyCollision.bind(this);\n    this.handleJumpKeyPress = this.handleJumpKeyPress.bind(this);\n    this.handleJumpKeyRelease = this.handleJumpKeyRelease.bind(this);\n  }\n\n  kill() {\n    this.isDead = true;\n    this.vel[1] += -200;\n    this.sprites.idleRight.facing = 'rightFlipped';\n    this.sprites.idleLeft.facing = 'leftFlipped';\n    this.sprites.runRight.facing = 'rightFlipped';\n    this.sprites.runLeft.facing = 'leftFlipped';\n  }\n\n  setSprite() {\n    const { vel, sprites, isFloating } = this;\n    const vx = vel[0];\n    const vy = vel[1];\n\n    if (vx > 0) {\n      this.sprite = sprites.runRight;\n    } else if (vx < 0) {\n      this.sprite = sprites.runLeft;\n    } else {\n      if (this.lastRunDirection === 'right') {\n        this.sprite = sprites.idleRight;\n      } else if (this.lastRunDirection === 'left') {\n        this.sprite = sprites.idleLeft;\n      }\n    }\n  }\n\n  handlePowerupCollision(powerupType, game) {\n    switch(powerupType) {\n      case 'shield':\n        this.shieldHitPoints++;\n        game.addShield();\n        break;\n      case 'electricShield':\n        this.electricShieldHitPoints += 1;\n        game.addElectricShield();\n        break;\n      case 'nuke':\n        const numEnemies = game.enemies.length;\n        let numberToRemove;\n        if (numEnemies === 0) {\n          numberToRemove = 0;\n        } else if (numEnemies === 1) {\n          numberToRemove = 1;\n        } else {\n          numberToRemove = Math.floor(numEnemies * 0.8);\n        }\n\n        for (let i = 0; i < numberToRemove; i++) {\n          game.enemies[i].kill();\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  handleEnemyCollision(enemy, game) {\n    const {\n      SHIELD_RECOVERY_TIME,\n      ELECTRIC_SHIELD_RECOVERY_TIME\n    } = CONSTANTS;\n\n    const timeSinceLastHit = Date.now() - this.lastHit;\n\n    // if player has electric shield\n    let isNotRecovering = timeSinceLastHit > ELECTRIC_SHIELD_RECOVERY_TIME;\n    if (isNotRecovering && this.electricShieldHitPoints > 0) {\n      this.electricShieldHitPoints--;\n      enemy.kill();\n      const outerElectricShield = game.electricShields[game.electricShields.length - 1];\n      outerElectricShield.sprite = outerElectricShield.sprites.flashing;\n      setTimeout(() => game.removeElectricShield(outerElectricShield.id), ELECTRIC_SHIELD_RECOVERY_TIME);\n      this.lastHit = Date.now();\n      return;\n    }\n\n    // if player has shield\n    isNotRecovering = timeSinceLastHit > SHIELD_RECOVERY_TIME;\n    if (isNotRecovering && this.shieldHitPoints === 0) {\n      this.kill();\n      game.gameOver = true;\n    } else if (isNotRecovering) {\n      this.shieldHitPoints--;\n      const outerShield = game.shields[game.shields.length - 1];\n      outerShield.sprite = outerShield.sprites.flashing;\n      setTimeout(() => game.removeShield(outerShield.id), SHIELD_RECOVERY_TIME);\n      this.lastHit = Date.now();\n    }\n  }\n\n  handleSurfaceCollison(collisionType) {\n    if (collisionType === 'bottom') {\n      this.jumpNumber = 0;\n    }\n  }\n\n  handleJumpKeyPress() {\n    if (this.jumpNumber < 2 && !this.jumpKeyPressed) {\n      this.jumpNumber++;\n      this.vel[1] = CONSTANTS.PLAYER_VERTICAL_INIT_VEL;\n    }\n    this.jumpKeyPressed = true;\n  }\n\n  handleJumpKeyRelease() {\n    this.jumpKeyPressed = false;\n  }\n\n  handleInput(dt) {\n    const input = window.input;\n    const {\n      pos,\n      vel,\n      isDead,\n      sprites,\n      jumpNumber,\n      handleJumpKeyPress,\n      handleJumpKeyRelease\n     } = this;\n    const {\n      PLAYER_HORIZONTAL_VEL,\n      PLAYER_HORIZONTAL_ACC\n    } = CONSTANTS;\n\n    if (isDead) {\n      return;\n    }\n\n    if (input.isDown('UP') || input.isDown('SPACE')) {\n      handleJumpKeyPress();\n    } else {\n      handleJumpKeyRelease();\n    }\n\n    if (input.isDown('LEFT')) {\n      this.lastRunDirection = 'left';\n      if (vel[0] > -PLAYER_HORIZONTAL_VEL) {\n        this.vel[0] -= (PLAYER_HORIZONTAL_ACC * dt);\n      } else {\n        this.vel[0] = -PLAYER_HORIZONTAL_VEL;\n      }\n    } else if (input.isDown('RIGHT')) {\n      this.lastRunDirection = 'right';\n      if (this.vel[0] < PLAYER_HORIZONTAL_VEL) {\n        this.vel[0] += (PLAYER_HORIZONTAL_ACC * dt);\n      } else {\n        this.vel[0] = PLAYER_HORIZONTAL_VEL;\n      }\n    } else {\n      this.vel[0] = 0;\n    }\n\n    this.setSprite();\n  }\n\n\n\n}\n\nexport default Player;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Player.js\n **/","import * as CONSTANTS from './util/CONSTANTS';\n\nclass Moveable {\n  constructor(opts) {\n    const { pos, lastPos, vel, lastVel, sprites, sprite } = opts;\n    this.pos = pos;\n    this.lastPos = [0, 0];\n    this.vel = vel;\n    this.lastVel = [0, 0];\n    this.sprites = sprites;\n    this.sprite = sprite;\n\n    this.update = this.update.bind(this);\n  }\n\n  update(dt) {\n    this.lastPos[0] = this.pos[0];\n    this.lastPos[1] = this.pos[1];\n    this.lastVel[0] = this.vel[0];\n    this.lastVel[1] = this.vel[1];\n    this.vel[1] += CONSTANTS.GRAVITY * dt;\n    this.pos[0] += this.vel[0] * dt;\n    this.pos[1] += this.vel[1] * dt;\n    this.sprite.update(dt);\n  }\n\n}\n\nexport default Moveable;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Moveable.js\n **/","export const GRAVITY = 1400; // px/sec^2\n\nexport const PLAYER_HORIZONTAL_VEL = 375; // px/sec\nexport const PLAYER_HORIZONTAL_ACC = 6000; // px/sec^2\nexport const PLAYER_VERTICAL_INIT_VEL = -600;\nexport const SHIELD_RECOVERY_TIME = 500; // millisecs\nexport const ELECTRIC_SHIELD_RECOVERY_TIME = 500; // millisecs\n\nexport const ENEMY_ONE_VEL = 325;\nexport const ENEMY_ONE_INIT_VEL = -400;\nexport const ENEMY_SPAWN_RATE = 6000;  // every n millisecs\nexport const ENEMY_SPAWN_DIFF = 150;\nexport const ENEMY_SPAWN_FLOOR = 1000;\n\nexport const POWERUP_SPAWN_RATE = 3000; // every n millisecs\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/util/CONSTANTS.js\n **/","import Sprite from '../Sprite';\n\nexport const ELECTRIC_SHIELD = () => (\n  new Sprite({\n    url: './lib/img/electricShield.png',\n    pos: [0, 0],\n    frames: [0, 1, 2, 3, 2, 1, 0],\n    size: [64, 64],\n    speed: 10,\n    dir: 'horizontal',\n    once: false,\n    facing: 'right'\n  })\n);\n\nexport const ELECTRIC_SHIELD_FLASHING = () => (\n  new Sprite({\n    url: './lib/img/electricShield.png',\n    pos: [0, 0],\n    frames: [0, 5, 1, 5, 2, 5, 3, 5, 2, 5, 1, 5, 0],\n    size: [64, 64],\n    speed: 20,\n    dir: 'horizontal',\n    once: false,\n    facing: 'right'\n  })\n);\n\nexport const SHIELD = () => (\n  new Sprite({\n    url: './lib/img/shield.png',\n    pos: [0, 0],\n    frames: [0, 1, 2, 3, 2, 1, 0],\n    size: [64, 64],\n    speed: 10,\n    dir: 'horizontal',\n    once: false,\n    facing: 'right'\n  })\n);\n\nexport const SHIELD_FLASHING = () => (\n  new Sprite({\n    url:'./lib/img/shield.png',\n    pos: [0, 0],\n    frames: [0, 5, 1, 5, 2, 5, 3, 5, 2, 5, 1, 5, 0],\n    size: [64, 64],\n    speed: 20,\n    dir: 'horizontal',\n    once: false,\n    facing: 'right'\n  })\n);\n\nexport const SHIELD_PICKUP = () => (\n  new Sprite({\n    url: './lib/img/shieldPickup.png',\n    pos: [0, 0],\n    frames: [0, 1, 2, 1, 0],\n    size: [64, 64],\n    speed: 5,\n    dir: 'horizontal',\n    once: false,\n    facing: 'right'\n  })\n);\n\nexport const ELECTRIC_SHIELD_PICKUP = () => (\n  new Sprite({\n    url: './lib/img/electricShieldPickup.png',\n    pos: [0, 0],\n    frames: [0, 1, 2, 1, 0],\n    size: [64, 64],\n    speed: 5,\n    dir: 'horizontal',\n    once: false,\n    facing: 'right'\n  })\n);\n\nexport const NUKE_PICKUP = () => (\n  new Sprite({\n    url: './lib/img/nukePickup.png',\n    pos: [0, 0],\n    frames: [0, 1, 2, 1, 0],\n    size: [64, 64],\n    speed: 5,\n    dir: 'horizontal',\n    once: false,\n    facing: 'right'\n  })\n);\n\nexport const PLAYER_IDLE_RIGHT = () => (\n  new Sprite({\n    url: './lib/img/jay.png',\n    pos: [0, 0],\n    frames: [\n      0, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3,\n      3, 3, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0\n    ],\n    size: [64, 64],\n    speed: 24,\n    dir: 'horizontal',\n    once: false,\n    facing: 'right'\n  })\n);\n\nexport const PLAYER_IDLE_LEFT = () => (\n  new Sprite({\n    url: './lib/img/jay.png',\n    pos: [0, 0],\n    frames: [\n      0, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3,\n      3, 3, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0\n    ],\n    size: [64, 64],\n    speed: 24,\n    dir: 'horizontal',\n    once: false,\n    facing: 'left'\n  })\n);\n\n\nexport const PLAYER_RUN_RIGHT = () => (\n  new Sprite({\n    url: './lib/img/jay.png',\n    pos: [0, 0],\n    frames: [5, 6, 7, 8, 9, 8, 7, 6],\n    size: [64, 64],\n    speed: 18,\n    dir: 'horizontal',\n    once: false,\n    facing: 'right'\n  })\n);\n\n\nexport const PLAYER_RUN_LEFT = () => (\n  new Sprite({\n    url: './lib/img/jay.png',\n    pos: [0, 0],\n    frames: [6, 7, 8, 9, 8, 7, 6, 5],\n    size: [64, 64],\n    speed: 18,\n    dir: 'horizontal',\n    once: false,\n    facing: 'left'\n  })\n);\n\nexport const PLAYER_FLOAT_RIGHT = () => (\n  new Sprite({\n    url: './lib/img/jay.png',\n    pos: [0, 0],\n    frames: [12],\n    size: [64, 64],\n    speed: 1,\n    dir: 'horizontal',\n    once: false,\n    facing: 'right'\n  })\n);\n\nexport const PLAYER_FLOAT_LEFT = () => (\n  new Sprite({\n    url: './lib/img/jay.png',\n    pos: [0, 0],\n    frames: [12],\n    size: [64, 64],\n    speed: 1,\n    dir: 'horizontal',\n    once: false,\n    facing: 'left'\n  })\n);\n\n\nexport const PLAYER_JUMP_RIGHT = () => (\n  new Sprite({\n    url: './lib/img/jay.png',\n    pos: [0, 0],\n    frames: [10, 11, 11, 12, 12, 12, 12, 12, 12, 12],\n    size: [64, 64],\n    speed: 24,\n    dir: 'horizontal',\n    once: true,\n    facing: 'right'\n  })\n);\n\nexport const PLAYER_JUMP_LEFT = () => (\n  new Sprite({\n    url: './lib/img/jay.png',\n    pos: [0, 0],\n    frames: [10, 11, 11, 12, 12, 12, 12, 12, 12, 12],\n    size: [64, 64],\n    speed: 24,\n    dir: 'horizontal',\n    once: true,\n    facing: 'left'\n  })\n);\n\nexport const CRATE = () => (\n  new Sprite({\n    url: './lib/img/crate.png',\n    pos: [0, 0],\n    frames: [0],\n    size: [20, 20],\n    speed: 1,\n    dir: 'horizontal',\n    once: false,\n    facing: 'right'\n  })\n);\n\nexport const HAMMER_RUN_RIGHT = () => (\n  new Sprite({\n    url: './lib/img/hammer.png',\n    pos: [0, 0],\n    frames: [0, 1, 2, 3, 4, 3, 2, 1],\n    size: [64, 64],\n    speed: 10,\n    dir: 'horizontal',\n    once: false,\n    facing: 'right'\n  })\n);\n\nexport const HAMMER_RUN_LEFT = () => (\n  new Sprite({\n    url: './lib/img/hammer.png',\n    pos: [0, 0],\n    frames: [0, 1, 2, 3, 4, 3, 2, 1],\n    size: [64, 64],\n    speed: 10,\n    dir: 'horizontal',\n    once: false,\n    facing: 'left'\n  })\n);\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/util/SPRITES.js\n **/","import Resources from './Resources.js';\n\nclass Sprite {\n  constructor(opts) {\n    const { pos, size, speed, frames, url, dir, once, facing } = opts;\n    this.pos = pos;\n    this.size = size;\n    this.speed = typeof speed === 'number' ? speed : 0;\n    this.frames = frames;\n    this.url = url;\n    this.dir = dir;\n    this.once = once;\n    this._index = 0;\n    this.facing = facing;\n\n    this.update = this.update.bind(this);\n    this.render = this.render.bind(this);\n  }\n\n  update(dt) {\n    const { speed } = this;\n    this._index += speed * dt;\n  }\n\n  render(ctx) {\n    const { speed, frames, pos, size, once, _index, dir, url, facing } = this;\n    let frame;\n\n    if (speed > 0) {\n      const max = this.frames.length;\n      // idx is the ith picture\n      const idx = Math.floor(_index);\n      frame = frames[idx % max];\n\n      if (once && idx >= max) {\n        this.done = true;\n        return;\n      }\n    } else {\n      frame = frames[0];\n    }\n\n    let x = pos[0];\n    let y = pos[1];\n\n    if (dir === 'vertical') {\n      y += frame * size[1];\n    } else {\n      x += frame * size[0];\n    }\n\n    switch(facing) {\n      case 'left':\n        ctx.translate(size[0], 0);\n        ctx.scale(-1, 1);\n        break;\n      case 'leftFlipped':\n        ctx.translate(size[0], size[0]);\n        ctx.scale(-1, -1);\n        break;\n      case 'rightFlipped':\n        ctx.translate(0, size[0]);\n        ctx.scale(1, -1);\n        break;\n    }\n\n    ctx.drawImage(\n      Resources.get(url),\n      x, y,\n      size[0], size[1],\n      0, 0,\n      size[0], size[1]\n    );\n  }\n}\n\nexport default Sprite;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Sprite.js\n **/","import * as SPRITES from './SPRITES';\nimport * as STAGES from './STAGES';\nimport * as CONSTANTS from './CONSTANTS';\nimport WallSprite from '../WallSprite';\nimport Powerup from '../Powerup';\nimport Crate from '../Crate';\nimport Player from '../Player';\nimport Enemy from '../Enemy';\nimport Shield from '../Shield';\n\nexport const CRATE = () => (\n  new Crate({\n    pos: STAGES.CRATE_SPAWN(),\n    vel: [0, 10],\n    sprite: SPRITES.CRATE()\n  })\n);\n\nexport const ELECTRIC_SHIELD = (id, player) => (\n  new Shield({\n    id,\n    pos: player.pos,\n    type: 'electricShield',\n    sprites: {\n      normal: SPRITES.ELECTRIC_SHIELD(),\n      flashing: SPRITES.ELECTRIC_SHIELD_FLASHING()\n    },\n    sprite: SPRITES.ELECTRIC_SHIELD()\n  })\n);\n\nexport const SHIELD = (id, player) => (\n  new Shield({\n    id,\n    pos: player.pos,\n    type: 'shield',\n    sprites: {\n      normal: SPRITES.SHIELD(),\n      flashing: SPRITES.SHIELD_FLASHING(),\n    },\n    sprite: SPRITES.SHIELD()\n  })\n);\n\nexport const SHIELD_PICKUP = (id) => (\n  new Powerup({\n    id,\n    pos: STAGES.POWERUP_SPAWN(),\n    vel: [0, 0],\n    type: 'shield',\n    sprite: SPRITES.SHIELD_PICKUP()\n  })\n);\n\nexport const ELECTRIC_SHIELD_PICKUP = (id) => (\n  new Powerup({\n    id,\n    pos: STAGES.POWERUP_SPAWN(),\n    vel: [0, 0],\n    type: 'electricShield',\n    sprite: SPRITES.ELECTRIC_SHIELD_PICKUP()\n  })\n);\n\nexport const NUKE_PICKUP = (id) => (\n  new Powerup({\n    id,\n    pos: STAGES.POWERUP_SPAWN(),\n    vel: [0, 0],\n    type: 'nuke',\n    sprite: SPRITES.NUKE_PICKUP()\n  })\n);\n\nexport const PLAYER = () => (\n  new Player({\n    type: 'player',\n    pos: [450, 250],\n    vel: [0, 0],\n    sprites: {\n      idleRight: SPRITES.PLAYER_IDLE_RIGHT(),\n      idleLeft: SPRITES.PLAYER_IDLE_LEFT(),\n      runRight: SPRITES.PLAYER_RUN_RIGHT(),\n      runLeft: SPRITES.PLAYER_RUN_LEFT(),\n    },\n    sprite: SPRITES.PLAYER_IDLE_RIGHT()\n  })\n);\n\nexport const HAMMER = (id) => (\n  new Enemy({\n    id,\n    pos: [400, 0],\n    vel: [CONSTANTS.ENEMY_ONE_VEL, 0],\n    sprites: {\n      runLeft: SPRITES.HAMMER_RUN_LEFT(),\n      runRight: SPRITES.HAMMER_RUN_RIGHT()\n    },\n    sprite: SPRITES.HAMMER_RUN_LEFT()\n  })\n);\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/util/UNITS.js\n **/","import Wall from '../Wall';\n\n// WALL_THICKNESS\nconst WT = 30;\n\n// constants related to stage 1\nconst SLW1 = 170;   // SIDE_LEDGE_WIDTH_1\nconst MLW1 = 300;   // MID_LEDGE_WIDTH_1\nconst HO1 = 20;     // HEIGHT_OFFSET_1\nconst OW1 = 150;    // OPENING_WIDTH_1\n\nexport const STAGE_1 = [\n  // top walls\n  new Wall({\n    pos: [WT, 0],\n    size: [450 - (OW1 / 2) - WT, WT]\n  }),\n  new Wall({\n    pos: [450 + (OW1 / 2), 0],\n    size: [450 - (OW1 / 2) - WT, WT]\n  }),\n\n  // bottom walls\n  new Wall({\n    pos: [WT, 600 - WT],\n    size: [450 - (OW1 / 2) - WT, WT]\n  }),\n  new Wall({\n    pos: [450 + (OW1 / 2), 600 - WT],\n    size: [450 - (OW1 / 2) - WT, WT]\n  }),\n\n  // left wall\n  new Wall({\n    pos: [0, 0],\n    size: [WT, 600]\n  }),\n\n  // right wall\n  new Wall({\n    pos: [900 - WT, 0],\n    size: [WT, 600]\n  }),\n\n  // left ledge\n  new Wall({\n    pos: [WT, 300 - HO1],\n    size: [SLW1, WT]\n  }),\n\n  // right ledge\n  new Wall({\n    pos: [900 - WT - SLW1, 300 - HO1],\n    size: [SLW1, WT]\n  }),\n\n  // bottom-middle ledge\n  new Wall({\n    pos: [SLW1 + WT + 100, 400 - HO1],\n    size: [MLW1, WT]\n  }),\n\n  // upper-middle ledge\n  new Wall({\n    pos: [SLW1 + WT + 100, 170 - HO1],\n    size: [MLW1, WT]\n  }),\n\n  new Wall({\n    pos: [0, -WT - 25],\n    size: [900, WT]\n  })\n];\n\nconst sample = max => Math.floor(Math.random() * max);\n\nexport const CRATE_SPAWN = () => {\n  const seeds = [\n    [110, 230],\n    [120, 230],\n    [100, 230],\n    [90, 230],\n    [440, 330],\n    [450, 330],\n    [430, 330],\n    [420, 330],\n    [180, 520],\n    [190, 520],\n    [170, 520],\n    [160, 520],\n    [690, 520],\n    [780, 230],\n    [790, 230],\n    [770, 230],\n    [760, 230]\n  ];\n\n  const seed = seeds[sample(seeds.length)];\n  let multiplier = 1;\n  if (Math.random() > 0.5) {\n    multiplier = -1;\n  }\n  return [ (seed[0] + (multiplier * sample(20))), seed[1] ];\n};\n\nexport const POWERUP_SPAWN = () => {\n  const seeds = [\n    [420, 250],\n    [70, 150],\n    [750, 150],\n    [420, 500],\n    [420, 500],\n    [420, 500],\n    [420, 500],\n    [420, 500],\n    [420, 500],\n    [420, 500],\n    [420, 500],\n    [420, 500],\n    [420, 500],\n    [420, 90],\n    [420, 90],\n    [420, 90],\n    [420, 90],\n    [420, 90],\n    [420, 90],\n    [420, 90],\n    [420, 90],\n    [420, 90],\n    [420, 90],\n    [420, 90],\n    [420, 90]\n  ];\n\n  const seed = seeds[sample(seeds.length)];\n  return [ seed[0], seed[1] ];\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/util/STAGES.js\n **/","import WallSprite from './WallSprite';\n\nclass Wall {\n  constructor(opts) {\n    const { pos, size } = opts;\n    this.type = 'wall';\n    this.size = size;\n    this.pos = pos;\n    this.sprite = new WallSprite(size);\n\n    this.hitbox = () => ({\n      x: this.pos[0],\n      y: this.pos[1],\n      w: size[0],\n      h: size[1]\n    });\n  }\n}\n\nexport default Wall;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Wall.js\n **/","import Resources from './Resources';\n\nclass WallSprite {\n  constructor(size) {\n    this.size = size;\n  }\n\n  render(ctx) {\n    const { size } = this;\n    const pattern = ctx.createPattern(\n      Resources.get('./lib/img/metal.png'),\n      'repeat'\n    );\n    ctx.fillStyle = pattern;\n    // ctx.fillStyle = 'black';\n    ctx.fillRect(0, 0, size[0], size[1]);\n    // ctx.strokeStyle = 'red';\n    // ctx.strokeRect(0, 0, size[0], size[1]);\n  }\n}\n\nexport default WallSprite;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/WallSprite.js\n **/","import Moveable from './Moveable';\n\nclass Powerup extends Moveable {\n  constructor(opts) {\n    super(opts);\n    this.type = opts.type;\n    this.id = opts.id;\n\n    this.hitbox = () => ({\n      x: this.pos[0],\n      y: this.pos[1],\n      w: this.sprite.size[0],\n      h: this.sprite.size[1]\n    });\n  }\n\n  update(dt) {\n    this.sprite.update(dt);\n  }\n}\n\nexport default Powerup;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Powerup.js\n **/","import { GRAVITY } from './util/CONSTANTS';\nimport Moveable from './Moveable';\n\nclass Crate extends Moveable {\n  constructor(opts) {\n    super(opts);\n    this.type = 'crate';\n\n    this.hitbox = () => ({\n      x: this.pos[0],\n      y: this.pos[1],\n      w: this.sprite.size[0],\n      h: this.sprite.size[1]\n    });\n  }\n\n}\n\nexport default Crate;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Crate.js\n **/","import Moveable from './Moveable';\nimport * as CONSTANTS from './util/CONSTANTS';\nimport * as SPRITES from './util/SPRITES';\n\nclass Enemy extends Moveable {\n  constructor(opts) {\n    super(opts);\n    this.type = 'enemy';\n    this.speed = this.randomSpeed();\n    this.direction = Math.random() > 0.5 ? 'left' : 'right';\n    this.id = opts.id;\n    this.isDead = false;\n\n    this.hitbox = () => ({\n      x: this.pos[0] + 20,\n      y: this.pos[1] + 15,\n      w: 27,\n      h: 49\n    });\n\n    this.handleCollision = this.handleCollision.bind(this);\n    this.update = this.update.bind(this);\n    this.kill = this.kill.bind(this);\n  }\n\n  randomSpeed() {\n    return CONSTANTS.ENEMY_ONE_VEL * (0.8 + (Math.random() * 0.3));\n  }\n\n  handleCollision(collisionType) {\n    if (collisionType === 'right') {\n      this.direction = 'left';\n    } else if (collisionType === 'left') {\n      this.direction = 'right';\n    }\n  }\n\n  kill() {\n    this.isDead = true;\n    this.vel[1] += -400;\n    this.sprites.runRight.facing = 'rightFlipped';\n    this.sprites.runLeft.facing = 'leftFlipped';\n  }\n\n  update(dt) {\n    const { sprites, direction, speed } = this;\n    if (direction === 'left') {\n      this.vel[0] = -speed;\n      this.sprite = sprites.runRight; // facing wrong way in sprite sheet\n    } else if (direction === 'right') {\n      this.vel[0] = speed;\n      this.sprite = sprites.runLeft; // facing wrong way in sprite sheet\n    }\n    if (this.pos[0] > 900 || this.pos[1] > 600) {\n      this.pos[0] = 400;\n      this.pos[1] = 0;\n      this.speed = this.randomSpeed();\n    }\n\n    this.lastPos[0] = this.pos[0];\n    this.lastPos[1] = this.pos[1];\n    this.lastVel[0] = this.vel[0];\n    this.lastVel[1] = this.vel[1];\n\n    this.vel[1] += Math.random() > 0.9998 ? CONSTANTS.ENEMY_ONE_INIT_VEL : 0;\n    this.vel[1] += CONSTANTS.GRAVITY * dt;\n    this.pos[0] += this.vel[0] * dt;\n    this.pos[1] += this.vel[1] * dt;\n    this.sprite.update(dt);\n  }\n\n}\n\nexport default Enemy;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Enemy.js\n **/","import Moveable from './Moveable';\n\nclass Shield extends Moveable {\n  constructor(opts) {\n    super(opts);\n    this.id = opts.id;\n    this.type = opts.type;\n  }\n\n  update(dt) {\n    this.sprite.update(dt);\n  }\n\n}\n\nexport default Shield;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Shield.js\n **/","class Input {\n  constructor() {\n    this.pressedKeys = {};\n\n    this.setKey = this.setKey.bind(this);\n  }\n\n  setup() {\n    const { setKey } = this;\n    document.addEventListener('keydown', e => setKey(e, true));\n    document.addEventListener('keyup', e => setKey(e, false));\n    // window.addEventListener('blur', () => { this.pressedKeys = {}; });\n    window.input = {\n      isDown: key => this.pressedKeys[key.toUpperCase()],\n    };\n\n    window.addEventListener(\"keydown\", e => {\n    // prevent scrolling with arrow keys\n    if([32, 37, 38, 39, 40, 80].indexOf(e.keyCode) > -1) {\n        e.preventDefault();\n    }\n}, false);\n\n  }\n\n  setKey(event, status) {\n    const code = event.keyCode;\n    let key;\n\n    switch(code) {\n      case 32:\n        key = 'SPACE';\n        break;\n      case 37:\n        key = 'LEFT';\n        break;\n      case 38:\n        key = 'UP';\n        break;\n      case 39:\n        key = 'RIGHT';\n        break;\n      case 40:\n        key = 'DOWN';\n        break;\n      case 77:\n        key = 'M';\n        break;\n      case 82:\n        key = 'R';\n        break;\n      default:\n        key = String.fromCharCode(code);\n    }\n\n    this.pressedKeys[key] = status;\n  }\n}\n\nexport default new Input();\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Input.js\n **/","import Crate from '../Crate';\nimport * as CONSTANTS from './CONSTANTS';\n\nclass CollisionManager {\n  constructor(game) {\n    this.game = game;\n    // this.collisionEl = document.getElementById('collision');\n    this.entityHitWall = this.entityHitWall.bind(this);\n    this.typeOfCollision = this.typeOfCollision.bind(this);\n    this.handleCollisions = this.handleCollisions.bind(this);\n    this.handleEnemyCollisions = this.handleEnemyCollisions.bind(this);\n    this.handleCrateCollisions = this.handleCrateCollisions.bind(this);\n    this.handlePlayerCollisions = this.handlePlayerCollisions.bind(this);\n  }\n\n  handleCollisions(objects) {\n    const { player, enemies, crate, powerups } = objects;\n    const walls = objects.stage;\n    const {\n      handlePlayerCollisions,\n      handleEnemyCollisions,\n      handleCrateCollisions\n    } = this;\n\n    handlePlayerCollisions(player, [...walls, ...enemies, crate, ...powerups]);\n    handleEnemyCollisions(enemies, walls);\n    handleCrateCollisions(crate, walls);\n  }\n\n  handlePlayerCollisions(player, otherObjects) {\n    if (player.isDead) {\n      return;\n    }\n    const {\n      game,\n      typeOfCollision,\n      entityHitWall,\n      isPlayerFloating,\n      playerPickedUpCrate\n    } = this;\n    for (let i = 0; i < otherObjects.length; i++) {\n      const otherObject = otherObjects[i];\n      const collisionType = typeOfCollision(player, otherObject);\n      if (collisionType) {\n        switch(otherObject.type) {\n          case 'wall':\n            player.handleSurfaceCollison(collisionType);\n            entityHitWall(player, collisionType);\n            break;\n          case 'crate':\n            game.score++;\n            game.resetCrate();\n            break;\n          case 'enemy':\n            const enemy = otherObject;\n            if (!enemy.isDead) {\n              player.handleEnemyCollision(enemy, game);\n            }\n            break;\n          case 'shield':\n            const shield = otherObject;\n            player.handlePowerupCollision('shield', game);\n            game.removePowerup(shield.id);\n            break;\n          case 'electricShield':\n            const electricShield = otherObject;\n            player.handlePowerupCollision('electricShield', game);\n            game.removePowerup(electricShield.id);\n            break;\n          case 'nuke':\n            const nuke = otherObject;\n            player.handlePowerupCollision('nuke', game);\n            game.removePowerup(nuke.id);\n            break;\n          default:\n            return;\n        }\n      }\n    }\n  }\n\n  handleEnemyCollisions(enemies, walls) {\n    const { typeOfCollision, entityHitWall } = this;\n    for (let i = 0; i < enemies.length; i++) {\n      const enemy = enemies[i];\n      if (enemy.isDead) {\n        continue;\n      }\n      for (let j = 0; j < walls.length; j++) {\n        const wall = walls[j];\n        const collisionType = typeOfCollision(enemy, wall);\n        if (collisionType) {\n          enemy.handleCollision(collisionType);\n          entityHitWall(enemy, collisionType);\n        }\n      }\n    }\n  }\n\n  handleCrateCollisions(crate, walls) {\n    const { typeOfCollision, entityHitWall } = this;\n    for (let i = 0; i < walls.length; i++) {\n      const wall = walls[i];\n      const collisionType = typeOfCollision(crate, wall);\n      if (collisionType) {\n        entityHitWall(crate, collisionType);\n      }\n    }\n  }\n\n  entityHitWall(entity, collisionType) {\n    const {\n      resetXPos,\n      resetYPos,\n      resetXVel,\n      nullXVel,\n      resetYVel,\n      nullYVel,\n    } = this;\n    if (entity.type === 'player') {\n\n      // this.collisionEl.innerHTML = collisionType;\n    }\n    switch(collisionType) {\n      case 'bottom':\n        resetYPos(entity);\n        nullYVel(entity);\n        break;\n      case 'top':\n        resetYPos(entity);\n        nullYVel(entity);\n        break;\n      case 'left':\n        resetXPos(entity);\n      case 'right':\n        resetXPos(entity);\n        break;\n      case 'left-top':\n        resetXPos(entity, 3);\n        resetXVel(entity);\n        resetYPos(entity);\n        break;\n      case 'right-top':\n        resetXPos(entity, -3);\n        resetXVel(entity);\n        resetYPos(entity);\n        break;\n\n      case 'left-bottom':\n        resetXPos(entity, 5);\n        resetYPos(entity);\n        resetYVel(entity);\n        break;\n\n      case 'right-bottom':\n        resetXPos(entity, -5);\n        resetYPos(entity);\n        resetYVel(entity);\n        break;\n\n      case 'top-bottom':\n        resetXPos(entity);\n        break;\n      default:\n        break;\n    }\n  }\n\n  resetXPos(entity, offset = 0) {\n    entity.pos[0] = entity.lastPos[0] + offset;\n  }\n\n  resetYPos(entity, offset = 0) {\n    entity.pos[1] = entity.lastPos[1] + offset;\n  }\n\n  resetXVel(entity, offset = 0) {\n    entity.vel[0] = entity.lastVel[0] + offset;\n  }\n\n  nullXVel(entity) {\n    entity.vel[0] = 0;\n  }\n\n  resetYVel(entity, offset = 0) {\n    entity.vel[1] = entity.lastVel[1] + offset;\n  }\n\n  nullYVel(entity) {\n    entity.vel[1] = 0;\n  }\n\n  typeOfCollision(obj1, obj2) {\n    const { collisionExists } = this;\n    const rect1 = obj1.hitbox();\n    const rect2 = obj2.hitbox();\n\n    if (collisionExists(rect1, rect2)) {\n      const {\n        _collisionRight,\n        _collisionLeft,\n        _collisionTop,\n        _collisionBottom\n      } = this;\n\n      const l = _collisionLeft(rect1, rect2);\n      const r = _collisionRight(rect1, rect2);\n      const t = _collisionTop(rect1, rect2);\n      const b = _collisionBottom(rect1, rect2);\n\n      if ( t && b ) {\n        return 'top-bottom';\n      } else if (l && t) {\n        return 'left-top';\n      } else if (l && b ) {\n        return 'left-bottom';\n      } else if (r && t) {\n        return 'right-top';\n      } else if (r && b) {\n        return 'right-bottom';\n      } else if (l) {\n        return 'left';\n      } else if (r) {\n        return 'right';\n      } else if (t) {\n        return 'top';\n      } else if (b) {\n        return 'bottom';\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n\n  }\n\n  collisionExists(rect1, rect2) {\n    return (\n      rect1.x < rect2.x + rect2.w &&\n      rect1.x + rect1.w > rect2.x &&\n      rect1.y < rect2.y + rect2.h &&\n      rect1.h + rect1.y > rect2.y\n    );\n  }\n\n  // private\n\n  _collisionRight(rect1, rect2) {\n    return rect1.x + rect1.w > rect2.x && rect1.x < rect2.x;\n  }\n\n  _collisionLeft(rect1, rect2) {\n    return rect1.x < rect2.x + rect2.w && rect1.x + rect1.w > rect2.x + rect2.w;\n  }\n\n  _collisionTop(rect1, rect2) {\n    return rect1.y < rect2.y + rect2.h && rect1.y + rect1.h > rect2.y + rect2.h;\n  }\n\n  _collisionBottom(rect1, rect2) {\n    return rect1.y + rect1.h > rect2.y && rect1.y < rect2.y;\n  }\n\n}\n\nexport default CollisionManager;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/util/CollisionManager.js\n **/"],"sourceRoot":""}
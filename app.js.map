{"version":3,"sources":["webpack/bootstrap c46219a7eeccae97061b","./lib/SuperCrateBox.js","./lib/Resources.js","./lib/Player.js","./lib/Moveable.js","./lib/util/CONSTANTS.js","./lib/util/SPRITES.js","./lib/Sprite.js","./lib/Crate.js","./lib/Input.js","./lib/Enemy.js","./lib/util/STAGES.js","./lib/Wall.js","./lib/WallSprite.js","./lib/util/CollisionManager.js"],"names":["SPRITES","STAGES","CONSTANTS","SuperCrateBox","play","bind","main","update","render","setup","reset","addEnemy","removeEnemy","resetCrate","renderHtml","renderEntity","renderEntities","checkPlayerBounds","allObjects","updateEntities","lastTime","Date","now","lastEnemySpawnTime","gameOver","dt","timeSinceLastEnemySpawn","ENEMY_SPAWN_RATE","requestAnimationFrame","player","crate","enemies","handleInput","checkCollisions","collisionManager","handleCollisions","ctx","stage","clearRect","pos","setTimeout","STAGE_1_CRATE_SPAWN","vel","sprite","CRATE","score","scoreEl","className","type","lastPos","sprites","idle","PLAYER_IDLE","runRight","PLAYER_RUN_RIGHT","runLeft","PLAYER_RUN_LEFT","STAGE_1","load","init","onReady","canvas","document","getElementById","getContext","velocityEl","positionEl","currentEnemyId","i","length","innerHTML","vx","toFixed","vy","x","hitbox","y","entity","save","translate","restore","list","push","id","ENEMY_ONE_VEL","HAMMER_RUN_LEFT","HAMMER_RUN_RIGHT","targetId","enemy","splice","scb","addEventListener","Resources","resourceCache","loading","readyCallbacks","_load","get","isReady","arg","forEach","url","ready","k","hasOwnProperty","func","img","Image","onload","callback","src","Player","opts","jumpNumber","jumpKeyPressed","lastJumpTime","w","h","setSprite","handleSurfaceCollison","handleEnemyCollision","handleJumpKeyPress","handleJumpKeyRelease","isFloating","collisionType","game","PLAYER_VERTICAL_INIT_VEL","input","window","PLAYER_HORIZONTAL_VEL","PLAYER_HORIZONTAL_ACC","isDown","Moveable","lastVel","GRAVITY","JUMP_TIME","ENEMY_ONE_INIT_VEL","frames","size","speed","dir","once","facing","PLAYER_FLOAT_RIGHT","PLAYER_FLOAT_LEFT","PLAYER_JUMP_RIGHT","PLAYER_JUMP_LEFT","Sprite","_index","frame","max","idx","Math","floor","done","scale","drawImage","Crate","Input","pressedKeys","setKey","e","key","toUpperCase","indexOf","keyCode","preventDefault","event","status","code","String","fromCharCode","Enemy","randomSpeed","direction","random","handleCollision","WT","SLW1","MLW1","HO1","OW1","sample","seed","multiplier","Wall","WallSprite","pattern","createPattern","fillStyle","fillRect","CollisionManager","collisionEl","entityHitWall","typeOfCollision","handleEnemyCollisions","handleCrateCollisions","handlePlayerCollisions","objects","walls","otherObjects","isPlayerFloating","playerPickedUpCrate","otherObject","j","wall","resetXPos","resetYPos","resetXVel","nullXVel","resetYVel","nullYVel","offset","obj1","obj2","collisionExists","rect1","rect2","_collisionRight","_collisionLeft","_collisionTop","_collisionBottom","l","r","t","b"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c46219a7eeccae97061b\n **/"," import Resources from './Resources';\nimport Player from './Player';\nimport Crate from './Crate';\nimport Sprite from './Sprite';\nimport Input from './Input';\nimport Enemy from './Enemy';\nimport * as SPRITES from './util/SPRITES';\nimport * as STAGES from './util/STAGES';\nimport * as CONSTANTS from './util/CONSTANTS';\nimport CollisionManager from './util/CollisionManager';\n\nclass SuperCrateBox {\n  constructor() {\n    this.play = this.play.bind(this);\n    this.main = this.main.bind(this);\n    this.update = this.update.bind(this);\n    this.render = this.render.bind(this);\n    this.setup = this.setup.bind(this);\n    this.reset = this.reset.bind(this);\n    this.addEnemy = this.addEnemy.bind(this);\n    this.removeEnemy = this.removeEnemy.bind(this);\n    this.resetCrate = this.resetCrate.bind(this);\n    this.renderHtml = this.renderHtml.bind(this);\n    this.renderEntity = this.renderEntity.bind(this);\n    this.renderEntities = this.renderEntities.bind(this);\n    this.checkPlayerBounds = this.checkPlayerBounds.bind(this);\n    this.allObjects = this.allObjects.bind(this);\n    this.updateEntities = this.updateEntities.bind(this);\n  }\n\n  play() {\n    this.lastTime = Date.now();\n    this.lastEnemySpawnTime = Date.now();\n    this.setup();\n  }\n\n  main() {\n    if (this.gameOver) {\n      this.reset();\n      return;\n    }\n\n    const { update, render } = this;\n    const now = Date.now();\n    const dt = (now - this.lastTime) / 1000.0;\n    const timeSinceLastEnemySpawn = now - this.lastEnemySpawnTime;\n    if (timeSinceLastEnemySpawn >= CONSTANTS.ENEMY_SPAWN_RATE) {\n      this.addEnemy();\n    }\n\n    update(dt);\n    render();\n\n    this.lastTime = now;\n    requestAnimationFrame(this.main);\n  }\n\n  update(dt) {\n    const {\n      player,\n      crate,\n      enemies,\n      handleInput,\n      allObjects,\n      updateEntities,\n      checkCollisions,\n      checkPlayerBounds,\n      collisionManager\n    } = this;\n\n    player.handleInput(dt);\n    updateEntities(dt);\n    collisionManager.handleCollisions(allObjects());\n    checkPlayerBounds();\n  }\n\n  render() {\n    const {\n      ctx,\n      player,\n      enemies,\n      crate,\n      stage,\n      renderEntity,\n      renderEntities,\n      renderHtml,\n    } = this;\n\n    renderHtml();\n    ctx.clearRect(0, 0, 900, 600);\n    renderEntities(enemies);\n    renderEntity(player);\n    renderEntity(crate);\n    renderEntities(stage);\n  }\n\n  // private\n\n  resetCrate() {\n    this.crate.pos[0] = -100;\n    this.crate.pos[1] = 100;\n    setTimeout(() => {\n      this.crate = new Crate({\n        pos: STAGES.STAGE_1_CRATE_SPAWN(),\n        vel: [0, 10],\n        sprite: SPRITES.CRATE()\n      });\n    }, 500);\n  }\n\n  reset() {\n    this.gameOver = false;\n    this.score = 0;\n    this.scoreEl.className = 'single_digits';\n\n    this.player = new Player({\n      type: 'player',\n      pos: [450, 300],\n      lastPos: [450, 300],\n      vel: [0, 0],\n      sprites: {\n        idle: SPRITES.PLAYER_IDLE(),\n        runRight: SPRITES.PLAYER_RUN_RIGHT(),\n        runLeft: SPRITES.PLAYER_RUN_LEFT(),\n      },\n      sprite: SPRITES.PLAYER_IDLE()\n    });\n\n    this.enemies = [];\n\n    this.crate = new Crate({\n      pos: STAGES.STAGE_1_CRATE_SPAWN(),\n      vel: [0, 10],\n      sprite: SPRITES.CRATE()\n    });\n    this.stage = STAGES.STAGE_1;\n\n    this.main();\n  }\n\n  setup() {\n    this.gameOver = false;\n\n    // loads resources\n    Resources.load([\n      './lib/img/jay.png',\n      './lib/img/crate.png',\n      './lib/img/hammer.png',\n      './lib/img/metal.png'\n    ]);\n    const init = () => {\n      this.main();\n    };\n    Resources.onReady(init);\n    Input.setup();\n\n    // HTML Elements\n    const canvas = document.getElementById('canvas');\n    this.ctx = canvas.getContext('2d');\n    this.score = 0;\n    this.scoreEl = document.getElementById('score');\n    this.scoreEl.className = 'single_digits';\n    this.velocityEl = document.getElementById('velocity');\n    this.positionEl = document.getElementById('position');\n    this.collisionManager = new CollisionManager(this);\n\n    this.player = new Player({\n      type: 'player',\n      pos: [450, 300],\n      lastPos: [450, 300],\n      vel: [0, 0],\n      sprites: {\n        idle: SPRITES.PLAYER_IDLE(),\n        runRight: SPRITES.PLAYER_RUN_RIGHT(),\n        runLeft: SPRITES.PLAYER_RUN_LEFT(),\n      },\n      sprite: SPRITES.PLAYER_IDLE()\n    });\n\n    this.enemies = [];\n    this.currentEnemyId = 0;\n\n    this.crate = new Crate({\n      pos: STAGES.STAGE_1_CRATE_SPAWN(),\n      vel: [0, 10],\n      sprite: SPRITES.CRATE()\n    });\n    this.stage = STAGES.STAGE_1;\n  }\n\n  updateEntities(dt) {\n    this.player.update(dt);\n    this.crate.update(dt);\n    for (let i = 0; i < this.enemies.length; i++) {\n      this.enemies[i].update(dt);\n    }\n  }\n\n  checkPlayerBounds() {\n    if (this.player.pos[1] > 570) {\n      this.gameOver = true;\n    }\n  }\n\n  renderHtml() {\n    const { score, player } = this;\n    this.scoreEl.innerHTML = score;\n    if (this.score > 9) {\n      this.scoreEl.className = \"double_digits\";\n    }\n    const vx = this.player.vel[0].toFixed(0);\n    const vy = this.player.vel[1].toFixed(0);\n    const x = this.player.hitbox().x.toFixed(0);\n    const y = this.player.hitbox().y.toFixed(0);\n    this.velocityEl.innerHTML = `Enemies: ${this.enemies.length}`;\n    // this.velocityEl.innerHTML = `V: ${vx}, ${vy}`;\n    this.positionEl.innerHTML = `P: ${x}, ${y}`;\n  }\n\n  renderEntity(entity) {\n    const { ctx } = this;\n    ctx.save();\n    ctx.translate(entity.pos[0], entity.pos[1]);\n    entity.sprite.render(ctx);\n    ctx.restore();\n  }\n\n  renderEntities(list) {\n    for (let i = 0; i < list.length; i++) {\n      this.renderEntity(list[i]);\n    }\n  }\n\n  allObjects() {\n    const { player, enemies, crate, stage } = this;\n    return { player, enemies, crate, stage };\n  }\n\n  addEnemy() {\n    this.lastEnemySpawnTime = Date.now();\n    this.currentEnemyId++;\n    this.enemies.push(new Enemy({\n        id: this.currentEnemyId,\n        pos: [400, 0],\n        vel: [CONSTANTS.ENEMY_ONE_VEL, 0],\n        sprites: {\n          runLeft: SPRITES.HAMMER_RUN_LEFT(),\n          runRight: SPRITES.HAMMER_RUN_RIGHT()\n        },\n        sprite: SPRITES.HAMMER_RUN_LEFT()\n      })\n    );\n  }\n\n  removeEnemy(targetId) {\n    for (let i = 0; i < this.enemies.length; i++) {\n      const enemy = this.enemies[i];\n      if (enemy.id === targetId) {\n        this.enemies.splice(i, 1);\n        return;\n      }\n    }\n  }\n}\n\nconst scb = new SuperCrateBox();\ndocument.addEventListener('DOMContentLoaded', () => scb.play());\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/SuperCrateBox.js\n **/","class Resources {\n  constructor() {\n    this.resourceCache = {};\n    this.loading = [];\n    this.readyCallbacks = [];\n\n    this.load = this.load.bind(this);\n    this._load = this._load.bind(this);\n    this.get = this.get.bind(this);\n    this.isReady = this.isReady.bind(this);\n    this.onReady = this.onReady.bind(this);\n  }\n\n  load(arg) {\n    const { _load } = this;\n    arg.forEach(url => _load(url));\n  }\n\n  get(url) {\n    return this.resourceCache[url];\n  }\n\n  isReady() {\n    const { resourceCache } = this;\n    let ready = true;\n    for (let k in resourceCache) {\n      if (resourceCache.hasOwnProperty(k) && !resourceCache[k]) {\n        ready = false;\n      }\n    }\n    return ready;\n  }\n\n  onReady(func) {\n    this.readyCallbacks.push(func);\n  }\n\n  // private\n\n  _load(url) {\n    const { resourceCache, readyCallbacks, isReady } = this;\n\n    if (resourceCache[url]) {\n      return resourceCache[url];\n    } else {\n      const img = new Image();\n      img.onload = () => {\n        resourceCache[url] = img;\n\n        if (isReady()) {\n          readyCallbacks.forEach(callback => callback());\n        }\n      };\n      resourceCache[url] = false;\n      img.src = url;\n    }\n  }\n\n}\n\nconst { load, get, onReady, isReady } = new Resources();\nexport default {\n  load: load,\n  get: get,\n  onReady: onReady,\n  isReady: isReady\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Resources.js\n **/","import Moveable from './Moveable';\nimport * as CONSTANTS from './util/CONSTANTS';\nimport * as SPRITES from './util/SPRITES';\n\nclass Player extends Moveable {\n  constructor(opts) {\n    super(opts);\n    this.type = 'player';\n    this.jumpNumber = 0;\n    this.jumpKeyPressed = false;\n    this.lastJumpTime = Date.now();\n\n    this.hitbox = () => ({\n      x: this.pos[0] + 20,\n      y: this.pos[1] + 15,\n      w: 27,\n      h: 49\n    });\n\n    this.setSprite = this.setSprite.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSurfaceCollison = this.handleSurfaceCollison.bind(this);\n    this.handleEnemyCollision = this.handleEnemyCollision.bind(this);\n    this.handleJumpKeyPress = this.handleJumpKeyPress.bind(this);\n    this.handleJumpKeyRelease = this.handleJumpKeyRelease.bind(this);\n  }\n\n  setSprite() {\n    const { vel, sprites, isFloating } = this;\n    const vx = vel[0];\n    const vy = vel[1];\n\n    if (vx > 0) {\n      this.sprite = sprites.runRight;\n    } else if (vx < 0) {\n      this.sprite = sprites.runLeft;\n    } else {\n      this.sprite = sprites.idle;\n    }\n  }\n\n  handleEnemyCollision(collisionType, enemy, game) {\n    switch(collisionType) {\n      case 'bottom':\n        game.removeEnemy(enemy.id);\n        break;\n      case 'left-bottom':\n        game.removeEnemy(enemy.id);\n        break;\n      case 'right-bottom':\n        game.removeEnemy(enemy.id);\n        break;\n      default:\n        game.reset();\n        break;\n    }\n  }\n\n  handleSurfaceCollison(collisionType) {\n    if (collisionType === 'bottom') {\n      this.jumpNumber = 0;\n    }\n  }\n\n  handleJumpKeyPress() {\n    if (this.jumpNumber < 2 && !this.jumpKeyPressed) {\n      this.jumpNumber++;\n      this.vel[1] = CONSTANTS.PLAYER_VERTICAL_INIT_VEL;\n    }\n    this.jumpKeyPressed = true;\n  }\n\n  handleJumpKeyRelease() {\n    this.jumpKeyPressed = false;\n  }\n\n  handleInput(dt) {\n    const input = window.input;\n    const {\n      pos,\n      vel,\n      sprites,\n      jumpNumber,\n      handleJumpKeyPress,\n      handleJumpKeyRelease\n     } = this;\n    const {\n      PLAYER_HORIZONTAL_VEL,\n      PLAYER_HORIZONTAL_ACC\n    } = CONSTANTS;\n\n    if (input.isDown('UP') || input.isDown('SPACE')) {\n      handleJumpKeyPress();\n    } else {\n      handleJumpKeyRelease();\n    }\n\n    if (input.isDown('LEFT')) {\n      if (vel[0] > -PLAYER_HORIZONTAL_VEL) {\n        this.vel[0] -= (PLAYER_HORIZONTAL_ACC * dt);\n      } else {\n        this.vel[0] = -PLAYER_HORIZONTAL_VEL;\n      }\n    } else if (input.isDown('RIGHT')) {\n      if (this.vel[0] < PLAYER_HORIZONTAL_VEL) {\n        this.vel[0] += (PLAYER_HORIZONTAL_ACC * dt);\n      } else {\n        this.vel[0] = PLAYER_HORIZONTAL_VEL;\n      }\n    } else {\n      this.vel[0] = 0;\n    }\n\n    this.setSprite();\n  }\n\n\n\n}\n\nexport default Player;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Player.js\n **/","import * as CONSTANTS from './util/CONSTANTS';\n\nclass Moveable {\n  constructor(opts) {\n    const { pos, lastPos, vel, lastVel, sprites, sprite } = opts;\n    this.pos = pos;\n    this.lastPos = [0, 0];\n    this.vel = vel;\n    this.lastVel = [0, 0];\n    this.sprites = sprites;\n    this.sprite = sprite;\n\n    this.update = this.update.bind(this);\n  }\n\n  update(dt) {\n    this.lastPos[0] = this.pos[0];\n    this.lastPos[1] = this.pos[1];\n    this.lastVel[0] = this.vel[0];\n    this.lastVel[1] = this.vel[1];\n    this.vel[1] += CONSTANTS.GRAVITY * dt;\n    this.pos[0] += this.vel[0] * dt;\n    this.pos[1] += this.vel[1] * dt;\n    this.sprite.update(dt);\n  }\n\n}\n\nexport default Moveable;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Moveable.js\n **/","export const PLAYER_HORIZONTAL_VEL = 375; // px/sec\nexport const PLAYER_HORIZONTAL_ACC = 6000; // px/sec^2\nexport const PLAYER_VERTICAL_INIT_VEL = -600;\nexport const GRAVITY = 1400; // px/sec^2\nexport const JUMP_TIME = 0; //millisec\nexport const ENEMY_ONE_VEL = 350;\nexport const ENEMY_ONE_INIT_VEL = -400;\nexport const ENEMY_SPAWN_RATE = 5000;  // every n millisecs\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/util/CONSTANTS.js\n **/","import Sprite from '../Sprite';\n\nexport const PLAYER_IDLE = () => (\n  new Sprite({\n    url: './lib/img/jay.png',\n    pos: [0, 0],\n    frames: [\n      0, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3,\n      3, 3, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0\n    ],\n    size: [64, 64],\n    speed: 24,\n    dir: 'horizontal',\n    once: false,\n    facing: 'right'\n  })\n);\n\n\nexport const PLAYER_RUN_RIGHT = () => (\n  new Sprite({\n    url: './lib/img/jay.png',\n    pos: [0, 0],\n    frames: [5, 6, 7, 8, 9, 8, 7, 6],\n    size: [64, 64],\n    speed: 18,\n    dir: 'horizontal',\n    once: false,\n    facing: 'right'\n  })\n);\n\n\nexport const PLAYER_RUN_LEFT = () => (\n  new Sprite({\n    url: './lib/img/jay.png',\n    pos: [0, 0],\n    frames: [6, 7, 8, 9, 8, 7, 6, 5],\n    size: [64, 64],\n    speed: 18,\n    dir: 'horizontal',\n    once: false,\n    facing: 'left'\n  })\n);\n\nexport const PLAYER_FLOAT_RIGHT = () => (\n  new Sprite({\n    url: './lib/img/jay.png',\n    pos: [0, 0],\n    frames: [12],\n    size: [64, 64],\n    speed: 1,\n    dir: 'horizontal',\n    once: false,\n    facing: 'right'\n  })\n);\n\nexport const PLAYER_FLOAT_LEFT = () => (\n  new Sprite({\n    url: './lib/img/jay.png',\n    pos: [0, 0],\n    frames: [12],\n    size: [64, 64],\n    speed: 1,\n    dir: 'horizontal',\n    once: false,\n    facing: 'left'\n  })\n);\n\n\nexport const PLAYER_JUMP_RIGHT = () => (\n  new Sprite({\n    url: './lib/img/jay.png',\n    pos: [0, 0],\n    frames: [10, 11, 11, 12, 12, 12, 12, 12, 12, 12],\n    size: [64, 64],\n    speed: 24,\n    dir: 'horizontal',\n    once: true,\n    facing: 'right'\n  })\n);\n\nexport const PLAYER_JUMP_LEFT = () => (\n  new Sprite({\n    url: './lib/img/jay.png',\n    pos: [0, 0],\n    frames: [10, 11, 11, 12, 12, 12, 12, 12, 12, 12],\n    size: [64, 64],\n    speed: 24,\n    dir: 'horizontal',\n    once: true,\n    facing: 'left'\n  })\n);\n\nexport const CRATE = () => (\n  new Sprite({\n    url: './lib/img/crate.png',\n    pos: [0, 0],\n    frames: [0],\n    size: [20, 20],\n    speed: 1,\n    dir: 'horizontal',\n    once: false,\n    facing: 'right'\n  })\n);\n\nexport const HAMMER_RUN_RIGHT = () => (\n  new Sprite({\n    url: './lib/img/hammer.png',\n    pos: [0, 0],\n    frames: [0, 1, 2, 3, 4, 3, 2, 1],\n    size: [64, 64],\n    speed: 10,\n    dir: 'horizontal',\n    once: false,\n    facing: 'right'\n  })\n);\n\nexport const HAMMER_RUN_LEFT = () => (\n  new Sprite({\n    url: './lib/img/hammer.png',\n    pos: [0, 0],\n    frames: [0, 1, 2, 3, 4, 3, 2, 1],\n    size: [64, 64],\n    speed: 10,\n    dir: 'horizontal',\n    once: false,\n    facing: 'left'\n  })\n);\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/util/SPRITES.js\n **/","import Resources from './Resources.js';\n\nclass Sprite {\n  constructor(opts) {\n    const { pos, size, speed, frames, url, dir, once, facing } = opts;\n    this.pos = pos;\n    this.size = size;\n    this.speed = typeof speed === 'number' ? speed : 0;\n    this.frames = frames;\n    this.url = url;\n    this.dir = dir;\n    this.once = once;\n    this._index = 0;\n    this.facing = facing;\n\n    this.update = this.update.bind(this);\n    this.render = this.render.bind(this);\n  }\n\n  update(dt) {\n    const { speed } = this;\n    this._index += speed * dt;\n  }\n\n  render(ctx) {\n    const { speed, frames, pos, size, once, _index, dir, url, facing } = this;\n    let frame;\n\n    if (speed > 0) {\n      const max = this.frames.length;\n      // idx is the ith picture\n      const idx = Math.floor(_index);\n      frame = frames[idx % max];\n\n      if (once && idx >= max) {\n        this.done = true;\n        return;\n      }\n    } else {\n      frame = frames[0];\n    }\n\n    let x = pos[0];\n    let y = pos[1];\n\n    if (dir === 'vertical') {\n      y += frame * size[1];\n    } else {\n      x += frame * size[0];\n    }\n\n    if (facing === 'left') {\n      ctx.translate(size[0], 0);\n      ctx.scale(-1, 1);\n    }\n\n    ctx.drawImage(\n      Resources.get(url),\n      x, y,\n      size[0], size[1],\n      0, 0,\n      size[0], size[1]\n    );\n  }\n}\n\nexport default Sprite;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Sprite.js\n **/","import { GRAVITY } from './util/CONSTANTS';\nimport Moveable from './Moveable';\n\nclass Crate extends Moveable {\n  constructor(opts) {\n    super(opts);\n    this.type = 'crate';\n\n    this.hitbox = () => ({\n      x: this.pos[0],\n      y: this.pos[1],\n      w: this.sprite.size[0],\n      h: this.sprite.size[1]\n    });\n  }\n\n}\n\nexport default Crate;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Crate.js\n **/","class Input {\n  constructor() {\n    this.pressedKeys = {};\n\n    this.setKey = this.setKey.bind(this);\n  }\n\n  setup() {\n    const { setKey } = this;\n    document.addEventListener('keydown', e => setKey(e, true));\n    document.addEventListener('keyup', e => setKey(e, false));\n    // window.addEventListener('blur', () => { this.pressedKeys = {}; });\n    window.input = {\n      isDown: key => this.pressedKeys[key.toUpperCase()],\n    };\n\n    window.addEventListener(\"keydown\", e => {\n    // prevent scrolling with arrow keys\n    if([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n        e.preventDefault();\n    }\n}, false);\n\n  }\n\n  setKey(event, status) {\n    const code = event.keyCode;\n    let key;\n\n    switch(code) {\n      case 32:\n        key = 'SPACE';\n        break;\n      case 37:\n        key = 'LEFT';\n        break;\n      case 38:\n        key = 'UP';\n        break;\n      case 39:\n        key = 'RIGHT';\n        break;\n      case 40:\n        key = 'DOWN';\n        break;\n      default:\n        key = String.fromCharCode(code);\n    }\n\n    this.pressedKeys[key] = status;\n  }\n}\n\nexport default new Input();\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Input.js\n **/","import Moveable from './Moveable';\nimport * as CONSTANTS from './util/CONSTANTS';\nimport * as SPRITES from './util/SPRITES';\n\nclass Enemy extends Moveable {\n  constructor(opts) {\n    super(opts);\n    this.type = 'enemy';\n    this.speed = this.randomSpeed();\n    this.direction = Math.random() > 0.5 ? 'left' : 'right';\n    this.id = opts.id;\n    \n    this.hitbox = () => ({\n      x: this.pos[0] + 20,\n      y: this.pos[1] + 15,\n      w: 27,\n      h: 49\n    });\n\n    this.handleCollision = this.handleCollision.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n  randomSpeed() {\n    return CONSTANTS.ENEMY_ONE_VEL * (0.8 + (Math.random() * 0.3));\n  }\n\n  handleCollision(collisionType) {\n    if (collisionType === 'right') {\n      this.direction = 'left';\n    } else if (collisionType === 'left') {\n      this.direction = 'right';\n    }\n  }\n\n  update(dt) {\n    const { sprites, direction, speed } = this;\n    if (direction === 'left') {\n      this.vel[0] = -speed;\n      this.sprite = sprites.runRight; // facing wrong way in sprite sheet\n    } else if (direction === 'right') {\n      this.vel[0] = speed;\n      this.sprite = sprites.runLeft; // facing wrong way in sprite sheet\n    }\n    if (this.pos[0] > 900 || this.pos[1] > 600) {\n      this.pos[0] = 400;\n      this.pos[1] = 0;\n      this.speed = this.randomSpeed();\n    }\n\n    this.lastPos[0] = this.pos[0];\n    this.lastPos[1] = this.pos[1];\n    this.lastVel[0] = this.vel[0];\n    this.lastVel[1] = this.vel[1];\n\n    this.vel[1] += Math.random() > 0.9999 ? CONSTANTS.ENEMY_ONE_INIT_VEL : 0;\n    this.vel[1] += CONSTANTS.GRAVITY * dt;\n    this.pos[0] += this.vel[0] * dt;\n    this.pos[1] += this.vel[1] * dt;\n    this.sprite.update(dt);\n  }\n\n}\n\nexport default Enemy;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Enemy.js\n **/","import Wall from '../Wall';\n\n// WALL_THICKNESS\nconst WT = 30;\n\n// constants related to stage 1\nconst SLW1 = 170;   // SIDE_LEDGE_WIDTH_1\nconst MLW1 = 300;   // MID_LEDGE_WIDTH_1\nconst HO1 = 20;     // HEIGHT_OFFSET_1\nconst OW1 = 150;    // OPENING_WIDTH_1\n\nexport const STAGE_1 = [\n  // top walls\n  new Wall({\n    pos: [WT, 0],\n    size: [450 - (OW1 / 2) - WT, WT]\n  }),\n  new Wall({\n    pos: [450 + (OW1 / 2), 0],\n    size: [450 - (OW1 / 2) - WT, WT]\n  }),\n\n  // bottom walls\n  new Wall({\n    pos: [WT, 600 - WT],\n    size: [450 - (OW1 / 2) - WT, WT]\n  }),\n  new Wall({\n    pos: [450 + (OW1 / 2), 600 - WT],\n    size: [450 - (OW1 / 2) - WT, WT]\n  }),\n\n  // left wall\n  new Wall({\n    pos: [0, 0],\n    size: [WT, 600]\n  }),\n\n  // right wall\n  new Wall({\n    pos: [900 - WT, 0],\n    size: [WT, 600]\n  }),\n\n  // left ledge\n  new Wall({\n    pos: [WT, 300 - HO1],\n    size: [SLW1, WT]\n  }),\n\n  // right ledge\n  new Wall({\n    pos: [900 - WT - SLW1, 300 - HO1],\n    size: [SLW1, WT]\n  }),\n\n  // bottom-middle ledge\n  new Wall({\n    pos: [SLW1 + WT + 100, 400 - HO1],\n    size: [MLW1, WT]\n  }),\n\n  // upper-middle ledge\n  new Wall({\n    pos: [SLW1 + WT + 100, 170 - HO1],\n    size: [MLW1, WT]\n  }),\n\n  new Wall({\n    pos: [0, -WT - 25],\n    size: [900, WT]\n  })\n];\n\nexport const STAGE_1_CRATE_SPAWN = () => {\n  const sample = max => Math.floor(Math.random() * max);\n  const seed = [\n    [110, 230],\n    [120, 230],\n    [100, 230],\n    [90, 230],\n    [440, 330],\n    [450, 330],\n    [430, 330],\n    [420, 330],\n    [180, 520],\n    [190, 520],\n    [170, 520],\n    [160, 520],\n    [690, 520],\n    [780, 230],\n    [790, 230],\n    [770, 230],\n    [760, 230]\n  ][sample(17)];\n  let multiplier = 1;\n  if (Math.random() > 0.5) {\n    multiplier = -1;\n  }\n  return [ (seed[0] + (multiplier * sample(10))), seed[1] ];\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/util/STAGES.js\n **/","import WallSprite from './WallSprite';\n\nclass Wall {\n  constructor(opts) {\n    const { pos, size } = opts;\n    this.type = 'wall';\n    this.size = size;\n    this.pos = pos;\n    this.sprite = new WallSprite(size);\n\n    this.hitbox = () => ({\n      x: this.pos[0],\n      y: this.pos[1],\n      w: size[0],\n      h: size[1]\n    });\n  }\n}\n\nexport default Wall;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Wall.js\n **/","import Resources from './Resources';\n\nclass WallSprite {\n  constructor(size) {\n    this.size = size;\n  }\n\n  render(ctx) {\n    const { size } = this;\n    const pattern = ctx.createPattern(\n      Resources.get('./lib/img/metal.png'),\n      'repeat'\n    );\n    ctx.fillStyle = pattern;\n    // ctx.fillStyle = 'black';\n    ctx.fillRect(0, 0, size[0], size[1]);\n    // ctx.strokeStyle = 'red';\n    // ctx.strokeRect(0, 0, size[0], size[1]);\n  }\n}\n\nexport default WallSprite;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/WallSprite.js\n **/","import Crate from '../Crate';\nimport * as CONSTANTS from './CONSTANTS';\n\nclass CollisionManager {\n  constructor(game) {\n    this.game = game;\n    this.collisionEl = document.getElementById('collision');\n    this.entityHitWall = this.entityHitWall.bind(this);\n    this.typeOfCollision = this.typeOfCollision.bind(this);\n    this.handleCollisions = this.handleCollisions.bind(this);\n    this.handleEnemyCollisions = this.handleEnemyCollisions.bind(this);\n    this.handleCrateCollisions = this.handleCrateCollisions.bind(this);\n    this.handlePlayerCollisions = this.handlePlayerCollisions.bind(this);\n  }\n\n  handleCollisions(objects) {\n    const { player, enemies, crate } = objects;\n    const walls = objects.stage;\n    const {\n      handlePlayerCollisions,\n      handleEnemyCollisions,\n      handleCrateCollisions\n    } = this;\n\n    handlePlayerCollisions(player, [...walls, ...enemies, crate]);\n    handleEnemyCollisions(enemies, walls);\n    handleCrateCollisions(crate, walls);\n  }\n\n  handlePlayerCollisions(player, otherObjects) {\n    const {\n      game,\n      typeOfCollision,\n      entityHitWall,\n      isPlayerFloating,\n      playerPickedUpCrate\n    } = this;\n    for (let i = 0; i < otherObjects.length; i++) {\n      const otherObject = otherObjects[i];\n      const collisionType = typeOfCollision(player, otherObject);\n      if (collisionType) {\n        switch(otherObject.type) {\n          case 'wall':\n            player.handleSurfaceCollison(collisionType);\n            entityHitWall(player, collisionType);\n            break;\n          case 'crate':\n            game.score++;\n            game.resetCrate();\n            break;\n          case 'enemy':\n            player.handleEnemyCollision(\n              collisionType,\n              otherObject,\n              game\n            );\n            break;\n          default:\n            return;\n        }\n      }\n    }\n  }\n\n  handleEnemyCollisions(enemies, walls) {\n    const { typeOfCollision, entityHitWall } = this;\n    for (let i = 0; i < enemies.length; i++) {\n      const enemy = enemies[i];\n      for (let j = 0; j < walls.length; j++) {\n        const wall = walls[j];\n        const collisionType = typeOfCollision(enemy, wall);\n        if (collisionType) {\n          enemy.handleCollision(collisionType);\n          entityHitWall(enemy, collisionType);\n        }\n      }\n    }\n  }\n\n  handleCrateCollisions(crate, walls) {\n    const { typeOfCollision, entityHitWall } = this;\n    for (let i = 0; i < walls.length; i++) {\n      const wall = walls[i];\n      const collisionType = typeOfCollision(crate, wall);\n      if (collisionType) {\n        entityHitWall(crate, collisionType);\n      }\n    }\n  }\n\n  entityHitWall(entity, collisionType) {\n    const {\n      resetXPos,\n      resetYPos,\n      resetXVel,\n      nullXVel,\n      resetYVel,\n      nullYVel,\n    } = this;\n    if (entity.type === 'player') {\n\n      this.collisionEl.innerHTML = collisionType;\n    }\n    switch(collisionType) {\n      case 'bottom':\n        resetYPos(entity);\n        nullYVel(entity);\n        break;\n      case 'top':\n        resetYPos(entity);\n        nullYVel(entity);\n        break;\n      case 'left':\n        resetXPos(entity);\n      case 'right':\n        resetXPos(entity);\n        break;\n      case 'left-top':\n        resetXPos(entity, 3);\n        resetXVel(entity);\n        resetYPos(entity);\n        break;\n      case 'right-top':\n        resetXPos(entity, -3);\n        resetXVel(entity);\n        resetYPos(entity);\n        break;\n\n      case 'left-bottom':\n        resetXPos(entity, 5);\n        resetYPos(entity);\n        resetYVel(entity);\n        break;\n\n      case 'right-bottom':\n        resetXPos(entity, -5);\n        resetYPos(entity);\n        resetYVel(entity);\n        break;\n\n      case 'top-bottom':\n        resetXPos(entity);\n        break;\n      default:\n        break;\n    }\n  }\n\n  resetXPos(entity, offset = 0) {\n    entity.pos[0] = entity.lastPos[0] + offset;\n  }\n\n  resetYPos(entity, offset = 0) {\n    entity.pos[1] = entity.lastPos[1] + offset;\n  }\n\n  resetXVel(entity, offset = 0) {\n    entity.vel[0] = entity.lastVel[0] + offset;\n  }\n\n  nullXVel(entity) {\n    entity.vel[0] = 0;\n  }\n\n  resetYVel(entity, offset = 0) {\n    entity.vel[1] = entity.lastVel[1] + offset;\n  }\n\n  nullYVel(entity) {\n    entity.vel[1] = 0;\n  }\n\n  typeOfCollision(obj1, obj2) {\n    const { collisionExists } = this;\n    const rect1 = obj1.hitbox();\n    const rect2 = obj2.hitbox();\n\n    if (collisionExists(rect1, rect2)) {\n      const {\n        _collisionRight,\n        _collisionLeft,\n        _collisionTop,\n        _collisionBottom\n      } = this;\n\n      const l = _collisionLeft(rect1, rect2);\n      const r = _collisionRight(rect1, rect2);\n      const t = _collisionTop(rect1, rect2);\n      const b = _collisionBottom(rect1, rect2);\n\n      if ( t && b ) {\n        return 'top-bottom';\n      } else if (l && t) {\n        return 'left-top';\n      } else if (l && b ) {\n        return 'left-bottom';\n      } else if (r && t) {\n        return 'right-top';\n      } else if (r && b) {\n        return 'right-bottom';\n      } else if (l) {\n        return 'left';\n      } else if (r) {\n        return 'right';\n      } else if (t) {\n        return 'top';\n      } else if (b) {\n        return 'bottom';\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n\n  }\n\n  collisionExists(rect1, rect2) {\n    return (\n      rect1.x < rect2.x + rect2.w &&\n      rect1.x + rect1.w > rect2.x &&\n      rect1.y < rect2.y + rect2.h &&\n      rect1.h + rect1.y > rect2.y\n    );\n  }\n\n  // private\n\n  _collisionRight(rect1, rect2) {\n    return rect1.x + rect1.w > rect2.x && rect1.x < rect2.x;\n  }\n\n  _collisionLeft(rect1, rect2) {\n    return rect1.x < rect2.x + rect2.w && rect1.x + rect1.w > rect2.x + rect2.w;\n  }\n\n  _collisionTop(rect1, rect2) {\n    return rect1.y < rect2.y + rect2.h && rect1.y + rect1.h > rect2.y + rect2.h;\n  }\n\n  _collisionBottom(rect1, rect2) {\n    return rect1.y + rect1.h > rect2.y && rect1.y < rect2.y;\n  }\n\n}\n\nexport default CollisionManager;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/util/CollisionManager.js\n **/"],"sourceRoot":""}
{"version":3,"sources":["webpack/bootstrap 508571d359ea1eac39bd","./lib/SuperCrateBox.js","./lib/Resources.js","./lib/Player.js","./lib/Moveable.js","./lib/util/CONSTANTS.js","./lib/util/SPRITES.js","./lib/Sprite.js","./lib/Crate.js","./lib/Input.js","./lib/Enemy.js","./lib/util/STAGES.js","./lib/Wall.js","./lib/WallSprite.js","./lib/util/CollisionManager.js"],"names":["SPRITES","STAGES","CONSTANTS","SuperCrateBox","play","bind","main","update","render","setup","reset","addEnemy","resetCrate","renderHtml","renderEntity","renderEntities","checkPlayerBounds","allObjects","updateEntities","lastTime","Date","now","lastEnemySpawnTime","gameOver","dt","requestAnimationFrame","player","crate","enemies","handleInput","checkCollisions","collisionManager","handleCollisions","ctx","stage","clearRect","pos","setTimeout","STAGE_1_CRATE_SPAWN","vel","sprite","CRATE","score","scoreEl","className","type","lastPos","PLAYER_IDLE","ENEMY_ONE_VEL","HAMMER_RUN_RIGHT","STAGE_1","load","init","onReady","canvas","document","getElementById","getContext","velocityEl","positionEl","i","length","innerHTML","vx","toFixed","vy","x","hitbox","y","entity","save","translate","restore","list","push","scb","addEventListener","Resources","resourceCache","loading","readyCallbacks","_load","get","isReady","arg","forEach","url","ready","k","hasOwnProperty","func","img","Image","onload","callback","src","Player","opts","jumpNumber","w","h","input","window","PLAYER_VERTICAL_INIT_VEL","PLAYER_HORIZONTAL_VEL","PLAYER_HORIZONTAL_ACC","PLAYER_RUN_RIGHT","PLAYER_RUN_LEFT","isDown","Moveable","lastVel","GRAVITY","JUMP_TIME","ENEMY_ONE_INIT_VEL","ENEMY_SPAWN_RATE","frames","size","speed","dir","once","facing","PLAYER_JUMP_RIGHT","PLAYER_JUMP_LEFT","HAMMER_RUN_LEFT","Sprite","_index","frame","max","idx","Math","floor","done","scale","drawImage","Crate","Input","pressedKeys","setKey","e","key","toUpperCase","indexOf","keyCode","preventDefault","event","status","code","String","fromCharCode","Enemy","randomSpeed","direction","random","handleCollision","collisionType","WT","SLW1","MLW1","HO1","OW1","sample","seed","multiplier","Wall","WallSprite","fillStyle","fillRect","CollisionManager","game","collisionEl","entityHitWall","typeOfCollision","handleEnemyCollisions","handleCrateCollisions","handlePlayerCollisions","objects","walls","otherObjects","playerPickedUpCrate","otherObject","enemy","j","wall","resetXPos","resetYPos","resetXVel","nullXVel","resetYVel","nullYVel","offset","obj1","obj2","collisionExists","rect1","rect2","_collisionRight","_collisionLeft","_collisionTop","_collisionBottom","l","r","t","b"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 508571d359ea1eac39bd\n **/","import Resources from './Resources';\nimport Player from './Player';\nimport Crate from './Crate';\nimport Sprite from './Sprite';\nimport Input from './Input';\nimport Enemy from './Enemy';\nimport * as SPRITES from './util/SPRITES';\nimport * as STAGES from './util/STAGES';\nimport * as CONSTANTS from './util/CONSTANTS';\nimport CollisionManager from './util/CollisionManager';\n\nclass SuperCrateBox {\n  constructor() {\n    this.play = this.play.bind(this);\n    this.main = this.main.bind(this);\n    this.update = this.update.bind(this);\n    this.render = this.render.bind(this);\n    this.setup = this.setup.bind(this);\n    this.reset = this.reset.bind(this);\n    this.addEnemy = this.addEnemy.bind(this);\n    this.resetCrate = this.resetCrate.bind(this);\n    this.renderHtml = this.renderHtml.bind(this);\n    this.renderEntity = this.renderEntity.bind(this);\n    this.renderEntities = this.renderEntities.bind(this);\n    this.checkPlayerBounds = this.checkPlayerBounds.bind(this);\n    this.allObjects = this.allObjects.bind(this);\n    this.updateEntities = this.updateEntities.bind(this);\n  }\n\n  play() {\n    this.lastTime = Date.now();\n    this.lastEnemySpawnTime = Date.now();\n    this.setup();\n  }\n\n  main() {\n    if (this.gameOver) {\n      this.reset();\n      return;\n    }\n\n    const { update, render } = this;\n    const now = Date.now();\n\n    // if ((this.lastEnemySpawnTime - now) > CONSTANTS.ENEMY_SPAWN_RATE) {\n      // this.addEnemy();\n    // }\n    const dt = (now - this.lastTime) / 1000.0;\n\n    update(dt);\n    render();\n\n    this.lastTime = now;\n    requestAnimationFrame(this.main);\n  }\n\n  update(dt) {\n    const {\n      player,\n      crate,\n      enemies,\n      handleInput,\n      allObjects,\n      updateEntities,\n      checkCollisions,\n      checkPlayerBounds,\n      collisionManager\n    } = this;\n\n    player.handleInput(dt);\n    updateEntities(dt);\n    collisionManager.handleCollisions(allObjects());\n    checkPlayerBounds();\n  }\n\n  render() {\n    const {\n      ctx,\n      player,\n      enemies,\n      crate,\n      stage,\n      renderEntity,\n      renderEntities,\n      renderHtml,\n    } = this;\n\n    renderHtml();\n    ctx.clearRect(0, 0, 900, 600);\n    renderEntity(player);\n    renderEntities(enemies);\n    renderEntity(crate);\n    renderEntities(stage);\n  }\n\n  // private\n\n  resetCrate() {\n    this.crate.pos[0] = -100;\n    this.crate.pos[1] = 100;\n    setTimeout(() => {\n      this.crate = new Crate({\n        pos: STAGES.STAGE_1_CRATE_SPAWN(),\n        vel: [0, 10],\n        sprite: SPRITES.CRATE\n      });\n    }, 500);\n  }\n\n  reset() {\n    this.gameOver = false;\n    this.score = 0;\n    this.scoreEl.className = 'single_digits';\n\n    this.player = new Player({\n      type: 'player',\n      pos: [450, 300],\n      lastPos: [450, 300],\n      vel: [0, 0],\n      sprite: SPRITES.PLAYER_IDLE\n    });\n\n    this.enemies = [\n      new Enemy({\n          pos: [400, 0],\n          vel: [CONSTANTS.ENEMY_ONE_VEL, 0],\n          sprite: SPRITES.HAMMER_RUN_RIGHT\n        })\n    ];\n\n    this.crate = new Crate({\n      pos: STAGES.STAGE_1_CRATE_SPAWN(),\n      vel: [0, 10],\n      sprite: SPRITES.CRATE\n    });\n    this.stage = STAGES.STAGE_1;\n\n    this.main();\n  }\n\n  setup() {\n    this.gameOver = false;\n\n    // loads resources\n    Resources.load([\n      './lib/img/jay.png',\n      './lib/img/crate.png',\n      './lib/img/hammer.png'\n    ]);\n    const init = () => {\n      this.main();\n    };\n    Resources.onReady(init);\n    Input.setup();\n\n    // HTML Elements\n    const canvas = document.getElementById('canvas');\n    this.ctx = canvas.getContext('2d');\n    this.score = 0;\n    this.scoreEl = document.getElementById('score');\n    this.scoreEl.className = 'single_digits';\n    this.velocityEl = document.getElementById('velocity');\n    this.positionEl = document.getElementById('position');\n    this.collisionManager = new CollisionManager(this);\n\n    this.player = new Player({\n      pos: [450, 300],\n      vel: [0, 0],\n      sprite: SPRITES.PLAYER_IDLE\n    });\n\n    this.enemies = [\n      new Enemy({\n          pos: [400, 0],\n          vel: [CONSTANTS.ENEMY_ONE_VEL, 0],\n          sprite: SPRITES.HAMMER_RUN_RIGHT\n        })\n    ];\n\n    this.crate = new Crate({\n      pos: STAGES.STAGE_1_CRATE_SPAWN(),\n      vel: [0, 10],\n      sprite: SPRITES.CRATE\n    });\n    this.stage = STAGES.STAGE_1;\n  }\n\n  updateEntities(dt) {\n    this.player.update(dt);\n    this.crate.update(dt);\n    for (let i = 0; i < this.enemies.length; i++) {\n      this.enemies[i].update(dt);\n    }\n  }\n\n  checkPlayerBounds() {\n    if (this.player.pos[1] > 570) {\n      this.gameOver = true;\n    }\n  }\n\n  renderHtml() {\n    const { score, player } = this;\n    this.scoreEl.innerHTML = score;\n    if (this.score > 9) {\n      this.scoreEl.className = \"double_digits\";\n    }\n    const vx = this.player.vel[0].toFixed(0);\n    const vy = this.player.vel[1].toFixed(0);\n    const x = this.player.hitbox().x.toFixed(0);\n    const y = this.player.hitbox().y.toFixed(0);\n    this.velocityEl.innerHTML = `V: ${vx}, ${vy}`;\n    this.positionEl.innerHTML = `P: ${x}, ${y}`;\n  }\n\n  renderEntity(entity) {\n    const { ctx } = this;\n    ctx.save();\n    ctx.translate(entity.pos[0], entity.pos[1]);\n    entity.sprite.render(ctx);\n    ctx.restore();\n  }\n\n  renderEntities(list) {\n    for (let i = 0; i < list.length; i++) {\n      this.renderEntity(list[i]);\n    }\n  }\n\n  allObjects() {\n    const { player, enemies, crate, stage } = this;\n    return { player, enemies, crate, stage };\n  }\n\n  addEnemy() {\n    this.lastEnemySpawnTime = Date.now();\n    this.enemies.push(new Enemy({\n        pos: [400, 0],\n        vel: [CONSTANTS.ENEMY_ONE_VEL, 0],\n        sprite: SPRITES.HAMMER_RUN_RIGHT\n      })\n    );\n  }\n}\n\nconst scb = new SuperCrateBox();\ndocument.addEventListener('DOMContentLoaded', () => scb.play());\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/SuperCrateBox.js\n **/","class Resources {\n  constructor() {\n    this.resourceCache = {};\n    this.loading = [];\n    this.readyCallbacks = [];\n\n    this.load = this.load.bind(this);\n    this._load = this._load.bind(this);\n    this.get = this.get.bind(this);\n    this.isReady = this.isReady.bind(this);\n    this.onReady = this.onReady.bind(this);\n  }\n\n  load(arg) {\n    const { _load } = this;\n    arg.forEach(url => _load(url));\n  }\n\n  get(url) {\n    return this.resourceCache[url];\n  }\n\n  isReady() {\n    const { resourceCache } = this;\n    let ready = true;\n    for (let k in resourceCache) {\n      if (resourceCache.hasOwnProperty(k) && !resourceCache[k]) {\n        ready = false;\n      }\n    }\n    return ready;\n  }\n\n  onReady(func) {\n    this.readyCallbacks.push(func);\n  }\n\n  // private\n\n  _load(url) {\n    const { resourceCache, readyCallbacks, isReady } = this;\n\n    if (resourceCache[url]) {\n      return resourceCache[url];\n    } else {\n      const img = new Image();\n      img.onload = () => {\n        resourceCache[url] = img;\n\n        if (isReady()) {\n          readyCallbacks.forEach(callback => callback());\n        }\n      };\n      resourceCache[url] = false;\n      img.src = url;\n    }\n  }\n\n}\n\nconst { load, get, onReady, isReady } = new Resources();\nexport default {\n  load: load,\n  get: get,\n  onReady: onReady,\n  isReady: isReady\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Resources.js\n **/","import Moveable from './Moveable';\nimport * as CONSTANTS from './util/CONSTANTS';\nimport * as SPRITES from './util/SPRITES';\n\nclass Player extends Moveable {\n  constructor(opts) {\n    super(opts);\n    this.type = 'player';\n    this.jumpNumber = 0;\n\n    this.hitbox = () => ({\n      x: this.pos[0] + 20,\n      y: this.pos[1] + 15,\n      w: 27,\n      h: 49\n    });\n\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleInput(dt) {\n    const input = window.input;\n    const { pos, vel, jumpNumber } = this;\n    const {\n      PLAYER_VERTICAL_INIT_VEL,\n      PLAYER_HORIZONTAL_VEL,\n      PLAYER_HORIZONTAL_ACC\n    } = CONSTANTS;\n    const {\n      PLAYER_RUN_RIGHT,\n      PLAYER_RUN_LEFT,\n      PLAYER_IDLE\n    } = SPRITES;\n\n    if (input.isDown('UP') || input.isDown('SPACE')) {\n      if (true) {\n        this.jumpNumber++;\n        this.vel[1] = PLAYER_VERTICAL_INIT_VEL;\n      }\n    }\n\n    if (input.isDown('LEFT')) {\n      if (vel[0] > -PLAYER_HORIZONTAL_VEL) {\n        this.vel[0] -= (PLAYER_HORIZONTAL_ACC * dt);\n      } else {\n        this.vel[0] = -PLAYER_HORIZONTAL_VEL;\n      }\n    } else if (input.isDown('RIGHT')) {\n      if (this.vel[0] < PLAYER_HORIZONTAL_VEL) {\n        this.vel[0] += (PLAYER_HORIZONTAL_ACC * dt);\n      } else {\n        this.vel[0] = PLAYER_HORIZONTAL_VEL;\n      }\n    } else {\n      this.vel[0] = 0;\n    }\n\n    if (vel[0] > 0) {\n      this.sprite = PLAYER_RUN_RIGHT;\n    } else if (vel[0] < 0) {\n      this.sprite = PLAYER_RUN_LEFT;\n    } else {\n      this.sprite = PLAYER_IDLE;\n    }\n  }\n\n\n}\n\nexport default Player;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Player.js\n **/","import * as CONSTANTS from './util/CONSTANTS';\n\nclass Moveable {\n  constructor(opts) {\n    const { pos, lastPos, vel, lastVel, sprite } = opts;\n    this.pos = pos;\n    this.lastPos = [0, 0];\n    this.vel = vel;\n    this.lastVel = [0, 0];\n    this.sprite = sprite;\n\n    this.update = this.update.bind(this);\n  }\n\n  update(dt) {\n    this.lastPos[0] = this.pos[0];\n    this.lastPos[1] = this.pos[1];\n    this.lastVel[0] = this.vel[0];\n    this.lastVel[1] = this.vel[1];\n    this.vel[1] += CONSTANTS.GRAVITY * dt;\n    this.pos[0] += this.vel[0] * dt;\n    this.pos[1] += this.vel[1] * dt;\n    this.sprite.update(dt);\n  }\n\n}\n\nexport default Moveable;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Moveable.js\n **/","export const PLAYER_HORIZONTAL_VEL = 375; // px/sec\nexport const PLAYER_HORIZONTAL_ACC = 6000; // px/sec^2\nexport const PLAYER_VERTICAL_INIT_VEL = -500;\nexport const GRAVITY = 1400; // px/sec^2\nexport const JUMP_TIME = 0; //millisec\nexport const ENEMY_ONE_VEL = 350;\nexport const ENEMY_ONE_INIT_VEL = -400;\nexport const ENEMY_SPAWN_RATE = 0;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/util/CONSTANTS.js\n **/","import Sprite from '../Sprite';\n\nexport const PLAYER_IDLE = new Sprite({\n  url: './lib/img/jay.png',\n  pos: [0, 0],\n  frames: [\n    0, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3,\n    3, 3, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0\n  ],\n  size: [64, 64],\n  speed: 24,\n  dir: 'horizontal',\n  once: false,\n  facing: 'right'\n});\n\n\nexport const PLAYER_RUN_RIGHT = new Sprite({\n  url: './lib/img/jay.png',\n  pos: [0, 0],\n  frames: [5, 6, 7, 8, 9, 8, 7, 6],\n  size: [64, 64],\n  speed: 18,\n  dir: 'horizontal',\n  once: false,\n  facing: 'right'\n});\n\n\nexport const PLAYER_RUN_LEFT = new Sprite({\n  url: './lib/img/jay.png',\n  pos: [0, 0],\n  frames: [6, 7, 8, 9, 8, 7, 6, 5],\n  size: [64, 64],\n  speed: 18,\n  dir: 'horizontal',\n  once: false,\n  facing: 'left'\n});\n\n\nexport const PLAYER_JUMP_RIGHT = new Sprite({\n  url: './lib/img/jay.png',\n  pos: [0, 0],\n  frames: [10, 11, 11, 12, 12, 12, 12, 12, 12, 12],\n  size: [64, 64],\n  speed: 24,\n  dir: 'horizontal',\n  once: true,\n  facing: 'right'\n});\n\nexport const PLAYER_JUMP_LEFT = new Sprite({\n  url: './lib/img/jay.png',\n  pos: [0, 0],\n  frames: [10, 11, 11, 12, 12, 12, 12, 12, 12, 12],\n  size: [64, 64],\n  speed: 24,\n  dir: 'horizontal',\n  once: true,\n  facing: 'left'\n});\n\nexport const CRATE = new Sprite({\n  url: './lib/img/crate.png',\n  pos: [0, 0],\n  frames: [0],\n  size: [20, 20],\n  speed: 1,\n  dir: 'horizontal',\n  once: false,\n  facing: 'right'\n});\n\nexport const HAMMER_RUN_RIGHT = new Sprite({\n  url: './lib/img/hammer.png',\n  pos: [0, 0],\n  frames: [0, 1, 2, 3, 4, 3, 2, 1],\n  size: [64, 64],\n  speed: 13,\n  dir: 'horizontal',\n  once: false,\n  facing: 'right'\n});\n\nexport const HAMMER_RUN_LEFT = new Sprite({\n  url: './lib/img/hammer.png',\n  pos: [0, 0],\n  frames: [0, 1, 2, 3, 4, 3, 2, 1],\n  size: [64, 64],\n  speed: 13,\n  dir: 'horizontal',\n  once: false,\n  facing: 'left'\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/util/SPRITES.js\n **/","import Resources from './Resources.js';\n\nclass Sprite {\n  constructor(opts) {\n    const { pos, size, speed, frames, url, dir, once, facing } = opts;\n    this.pos = pos;\n    this.size = size;\n    this.speed = typeof speed === 'number' ? speed : 0;\n    this.frames = frames;\n    this.url = url;\n    this.dir = dir;\n    this.once = once;\n    this._index = 0;\n    this.facing = facing;\n\n    this.update = this.update.bind(this);\n    this.render = this.render.bind(this);\n  }\n\n  update(dt) {\n    const { speed } = this;\n    this._index += speed * dt;\n  }\n\n  render(ctx) {\n    const { speed, frames, pos, size, once, _index, dir, url, facing } = this;\n    let frame;\n\n    if (speed > 0) {\n      const max = this.frames.length;\n      // idx is the ith picture\n      const idx = Math.floor(_index);\n      frame = frames[idx % max];\n\n      if (once && idx >= max) {\n        this.done = true;\n        return;\n      }\n    } else {\n      frame = frames[0];\n    }\n\n    let x = pos[0];\n    let y = pos[1];\n\n    if (dir === 'vertical') {\n      y += frame * size[1];\n    } else {\n      x += frame * size[0];\n    }\n\n    if (facing === 'left') {\n      ctx.translate(size[0], 0);\n      ctx.scale(-1, 1);\n    }\n\n\n    ctx.drawImage(\n      Resources.get(url),\n      x, y,\n      size[0], size[1],\n      0, 0,\n      size[0], size[1]\n    );\n  }\n}\n\nexport default Sprite;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Sprite.js\n **/","import { GRAVITY } from './util/CONSTANTS';\nimport Moveable from './Moveable';\n\nclass Crate extends Moveable {\n  constructor(opts) {\n    super(opts);\n    this.type = 'crate';\n\n    this.hitbox = () => ({\n      x: this.pos[0],\n      y: this.pos[1],\n      w: this.sprite.size[0],\n      h: this.sprite.size[1]\n    });\n  }\n\n}\n\nexport default Crate;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Crate.js\n **/","class Input {\n  constructor() {\n    this.pressedKeys = {};\n\n    this.setKey = this.setKey.bind(this);\n  }\n\n  setup() {\n    const { setKey } = this;\n    document.addEventListener('keydown', e => setKey(e, true));\n    document.addEventListener('keyup', e => setKey(e, false));\n    // window.addEventListener('blur', () => { this.pressedKeys = {}; });\n    window.input = {\n      isDown: key => this.pressedKeys[key.toUpperCase()],\n    };\n\n    window.addEventListener(\"keydown\", e => {\n    // prevent scrolling with arrow keys\n    if([32, 37, 38, 39, 40].indexOf(e.keyCode) > -1) {\n        e.preventDefault();\n    }\n}, false);\n\n  }\n\n  setKey(event, status) {\n    const code = event.keyCode;\n    let key;\n\n    switch(code) {\n      case 32:\n        key = 'SPACE';\n        break;\n      case 37:\n        key = 'LEFT';\n        break;\n      case 38:\n        key = 'UP';\n        break;\n      case 39:\n        key = 'RIGHT';\n        break;\n      case 40:\n        key = 'DOWN';\n        break;\n      default:\n        key = String.fromCharCode(code);\n    }\n\n    this.pressedKeys[key] = status;\n  }\n}\n\nexport default new Input();\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Input.js\n **/","import Moveable from './Moveable';\nimport * as CONSTANTS from './util/CONSTANTS';\nimport * as SPRITES from './util/SPRITES';\n\nclass Enemy extends Moveable {\n  constructor(opts) {\n    super(opts);\n    this.type = 'enemy';\n    this.speed = this.randomSpeed();\n    this.direction = Math.random() > 0.5 ? 'left' : 'right';\n\n    this.hitbox = () => ({\n      x: this.pos[0] + 20,\n      y: this.pos[1] + 15,\n      w: 27,\n      h: 49\n    });\n\n    this.handleCollision = this.handleCollision.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n  randomSpeed() {\n    return CONSTANTS.ENEMY_ONE_VEL * (0.8 + (Math.random() * 0.3));\n  }\n\n  handleCollision(collisionType) {\n    if (collisionType === 'right') {\n      this.direction = 'left';\n    } else if (collisionType === 'left') {\n      this.direction = 'right';\n    }\n  }\n\n  update(dt) {\n    if (this.direction === 'left') {\n      this.vel[0] = -this.speed;\n      this.sprite = SPRITES.HAMMER_RUN_RIGHT; // facing wrong way in sprite sheet\n    } else if (this.direction === 'right') {\n      this.vel[0] = this.speed;\n      this.sprite = SPRITES.HAMMER_RUN_LEFT; // facing wrong way in sprite sheet\n    }\n    if (this.pos[0] > 900 || this.pos[1] > 600) {\n      this.pos[0] = 400;\n      this.pos[1] = 0;\n      this.speed = this.randomSpeed();\n    }\n\n    this.lastPos[0] = this.pos[0];\n    this.lastPos[1] = this.pos[1];\n    this.lastVel[0] = this.vel[0];\n    this.lastVel[1] = this.vel[1];\n\n    this.vel[1] += Math.random() > 0.9999 ? CONSTANTS.ENEMY_ONE_INIT_VEL : 0;\n    this.vel[1] += CONSTANTS.GRAVITY * dt;\n    this.pos[0] += this.vel[0] * dt;\n    this.pos[1] += this.vel[1] * dt;\n    this.sprite.update(dt);\n  }\n\n}\n\nexport default Enemy;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Enemy.js\n **/","import Wall from '../Wall';\n\n// WALL_THICKNESS\nconst WT = 30;\n\n// constants related to stage 1\nconst SLW1 = 170;   // SIDE_LEDGE_WIDTH_1\nconst MLW1 = 300;   // MID_LEDGE_WIDTH_1\nconst HO1 = 20;     // HEIGHT_OFFSET_1\nconst OW1 = 150;    // OPENING_WIDTH_1\n\nexport const STAGE_1 = [\n  // top walls\n  new Wall({\n    pos: [WT, 0],\n    size: [450 - (OW1 / 2) - WT, WT]\n  }),\n  new Wall({\n    pos: [450 + (OW1 / 2), 0],\n    size: [450 - (OW1 / 2) - WT, WT]\n  }),\n\n  // bottom walls\n  new Wall({\n    pos: [WT, 600 - WT],\n    size: [450 - (OW1 / 2) - WT, WT]\n  }),\n  new Wall({\n    pos: [450 + (OW1 / 2), 600 - WT],\n    size: [450 - (OW1 / 2) - WT, WT]\n  }),\n\n  // left wall\n  new Wall({\n    pos: [0, 0],\n    size: [WT, 600]\n  }),\n\n  // right wall\n  new Wall({\n    pos: [900 - WT, 0],\n    size: [WT, 600]\n  }),\n\n  // left ledge\n  new Wall({\n    pos: [WT, 300 - HO1],\n    size: [SLW1, WT]\n  }),\n\n  // right ledge\n  new Wall({\n    pos: [900 - WT - SLW1, 300 - HO1],\n    size: [SLW1, WT]\n  }),\n\n  // bottom-middle ledge\n  new Wall({\n    pos: [SLW1 + WT + 100, 400 - HO1],\n    size: [MLW1, WT]\n  }),\n\n  // upper-middle ledge\n  new Wall({\n    pos: [SLW1 + WT + 100, 170 - HO1],\n    size: [MLW1, WT]\n  }),\n\n  new Wall({\n    pos: [0, -WT - 25],\n    size: [900, WT]\n  })\n];\n\nexport const STAGE_1_CRATE_SPAWN = () => {\n  const sample = max => Math.floor(Math.random() * max);\n  const seed = [\n    [110, 230],\n    [120, 230],\n    [100, 230],\n    [90, 230],\n    [440, 330],\n    [450, 330],\n    [430, 330],\n    [420, 330],\n    [180, 520],\n    [190, 520],\n    [170, 520],\n    [160, 520],\n    [690, 520],\n    [780, 230],\n    [790, 230],\n    [770, 230],\n    [760, 230],\n    [440, 100],\n    [450, 100],\n    [430, 100],\n    [420, 100]\n  ][sample(21)];\n  let multiplier = 1;\n  if (Math.random() > 0.5) {\n    multiplier = -1;\n  }\n  return [ (seed[0] + (multiplier * sample(10))), seed[1] ];\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/util/STAGES.js\n **/","import WallSprite from './WallSprite';\n\nclass Wall {\n  constructor(opts) {\n    const { pos, size } = opts;\n    this.type = 'wall';\n    this.size = size;\n    this.pos = pos;\n    this.sprite = new WallSprite(size);\n\n    this.hitbox = () => ({\n      x: this.pos[0],\n      y: this.pos[1],\n      w: size[0],\n      h: size[1]\n    });\n  }\n}\n\nexport default Wall;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/Wall.js\n **/","import Resources from './Resources';\n\nclass WallSprite {\n  constructor(size) {\n    this.size = size;\n  }\n\n  render(ctx) {\n    const { size } = this;\n    // const pattern = ctx.createPattern(\n    //   Resources.get('./lib/img/brick.png'),\n    //   'repeat'\n    // );\n    // ctx.fillStyle = pattern;\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0, 0, size[0], size[1]);\n    // ctx.strokeStyle = 'red';\n    // ctx.strokeRect(0, 0, size[0], size[1]);\n  }\n}\n\nexport default WallSprite;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/WallSprite.js\n **/","import Crate from '../Crate';\n\nclass CollisionManager {\n  constructor(game) {\n    this.game = game;\n    this.collisionEl = document.getElementById('collision');\n    this.entityHitWall = this.entityHitWall.bind(this);\n    this.typeOfCollision = this.typeOfCollision.bind(this);\n    this.handleCollisions = this.handleCollisions.bind(this);\n    this.handleEnemyCollisions = this.handleEnemyCollisions.bind(this);\n    this.handleCrateCollisions = this.handleCrateCollisions.bind(this);\n    this.handlePlayerCollisions = this.handlePlayerCollisions.bind(this);\n  }\n\n  handleCollisions(objects) {\n    const { player, enemies, crate } = objects;\n    const walls = objects.stage;\n    const {\n      handlePlayerCollisions,\n      handleEnemyCollisions,\n      handleCrateCollisions\n    } = this;\n\n    handlePlayerCollisions(player, [...walls, ...enemies, crate]);\n    handleEnemyCollisions(enemies, walls);\n    handleCrateCollisions(crate, walls);\n  }\n\n  handlePlayerCollisions(player, otherObjects) {\n    const {\n      game,\n      typeOfCollision,\n      entityHitWall,\n      playerPickedUpCrate\n    } = this;\n    for (let i = 0; i < otherObjects.length; i++) {\n      const otherObject = otherObjects[i];\n      const collisionType = typeOfCollision(player, otherObject);\n      if (collisionType) {\n        switch(otherObject.type) {\n          case 'wall':\n            entityHitWall(player, collisionType);\n            break;\n          case 'crate':\n            game.score++;\n            game.resetCrate();\n            break;\n          case 'enemy':\n            game.reset();\n            break;\n          default:\n            return;\n        }\n      }\n    }\n  }\n\n  handleEnemyCollisions(enemies, walls) {\n    const { typeOfCollision, entityHitWall } = this;\n    for (let i = 0; i < enemies.length; i++) {\n      const enemy = enemies[i];\n      for (let j = 0; j < walls.length; j++) {\n        const wall = walls[j];\n        const collisionType = typeOfCollision(enemy, wall);\n        if (collisionType) {\n          enemy.handleCollision(collisionType);\n          entityHitWall(enemy, collisionType);\n        }\n      }\n    }\n  }\n\n  handleCrateCollisions(crate, walls) {\n    const { typeOfCollision, entityHitWall } = this;\n    for (let i = 0; i < walls.length; i++) {\n      const wall = walls[i];\n      const collisionType = typeOfCollision(crate, wall);\n      if (collisionType) {\n        entityHitWall(crate, collisionType);\n      }\n    }\n  }\n\n  entityHitWall(entity, collisionType) {\n    const {\n      resetXPos,\n      resetYPos,\n      resetXVel,\n      nullXVel,\n      resetYVel,\n      nullYVel,\n    } = this;\n    if (entity.type === 'player') {\n\n      this.collisionEl.innerHTML = collisionType;\n    }\n    switch(collisionType) {\n      case 'bottom':\n        resetYPos(entity);\n        nullYVel(entity);\n        break;\n      case 'top':\n        resetYPos(entity);\n        nullYVel(entity);\n        break;\n      case 'left':\n        resetXPos(entity);\n      case 'right':\n        resetXPos(entity);\n        break;\n      case 'left-top':\n        resetXPos(entity, 1);\n        resetXVel(entity);\n        resetYPos(entity);\n        break;\n      case 'right-top':\n        resetXPos(entity, -1);\n        resetXVel(entity);\n        resetYPos(entity);\n        break;\n\n      case 'left-bottom':\n        resetXPos(entity, 5);\n        resetYPos(entity);\n        resetYVel(entity);\n        break;\n\n      case 'right-bottom':\n        resetXPos(entity, -5);\n        resetYPos(entity);\n        resetYVel(entity);\n        break;\n\n      case 'top-bottom':\n        resetXPos(entity);\n        break;\n      default:\n        break;\n    }\n  }\n\n  resetXPos(entity, offset = 0) {\n    entity.pos[0] = entity.lastPos[0] + offset;\n  }\n\n  resetYPos(entity, offset = 0) {\n    entity.pos[1] = entity.lastPos[1] + offset;\n  }\n\n  resetXVel(entity, offset = 0) {\n    entity.vel[0] = entity.lastVel[0] + offset;\n  }\n\n  nullXVel(entity) {\n    entity.vel[0] = 0;\n  }\n\n  resetYVel(entity, offset = 0) {\n    entity.vel[1] = entity.lastVel[1] + offset;\n  }\n\n  nullYVel(entity) {\n    entity.vel[1] = 0;\n  }\n\n  typeOfCollision(obj1, obj2) {\n    const { collisionExists } = this;\n    const rect1 = obj1.hitbox();\n    const rect2 = obj2.hitbox();\n\n    if (collisionExists(rect1, rect2)) {\n      const {\n        _collisionRight,\n        _collisionLeft,\n        _collisionTop,\n        _collisionBottom\n      } = this;\n\n      const l = _collisionLeft(rect1, rect2);\n      const r = _collisionRight(rect1, rect2);\n      const t = _collisionTop(rect1, rect2);\n      const b = _collisionBottom(rect1, rect2);\n\n      if ( t && b ) {\n        return 'top-bottom';\n      } else if (l && t) {\n        return 'left-top';\n      } else if (l && b ) {\n        return 'left-bottom';\n      } else if (r && t) {\n        return 'right-top';\n      } else if (r && b) {\n        return 'right-bottom';\n      } else if (l) {\n        return 'left';\n      } else if (r) {\n        return 'right';\n      } else if (t) {\n        return 'top';\n      } else if (b) {\n        return 'bottom';\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n\n  }\n\n  collisionExists(rect1, rect2) {\n    return (\n      rect1.x < rect2.x + rect2.w &&\n      rect1.x + rect1.w > rect2.x &&\n      rect1.y < rect2.y + rect2.h &&\n      rect1.h + rect1.y > rect2.y\n    );\n  }\n\n  // private\n\n  _collisionRight(rect1, rect2) {\n    return rect1.x + rect1.w > rect2.x && rect1.x < rect2.x;\n  }\n\n  _collisionLeft(rect1, rect2) {\n    return rect1.x < rect2.x + rect2.w && rect1.x + rect1.w > rect2.x + rect2.w;\n  }\n\n  _collisionTop(rect1, rect2) {\n    return rect1.y < rect2.y + rect2.h && rect1.y + rect1.h > rect2.y + rect2.h;\n  }\n\n  _collisionBottom(rect1, rect2) {\n    return rect1.y + rect1.h > rect2.y && rect1.y < rect2.y;\n  }\n\n}\n\nexport default CollisionManager;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/util/CollisionManager.js\n **/"],"sourceRoot":""}